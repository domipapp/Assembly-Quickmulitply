AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE     1


MACRO ASSEMBLER AX51 V3.15.3.0
OBJECT MODULE PLACED IN .\src\main.OBJ
ASSEMBLER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.60\BIN\AX51.exe C:\Users\domip
                      \Desktop\marhazi\HFTemplate\src\main.asm ERRORPRINT SET(SMALL,SILABS_STARTUP=1) DEBUG MACRO NOMOD5
                      1 INCDIR(C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/shared/si8051Base;C
                      :/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8BB3/inc) PRINT(.\src\main
                      .lst) COND SYMBOLS PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\main.OBJ) 

LOC    OBJ             LINE     SOURCE

                          1     ; -----------------------------------------------------------
                          2     ; Mikrokontroller alapú rendszerek házi feladat
                          3     ; Készítette: Papp Domink
                          4     ; Neptun code: EAT3D9
                          5     ; Feladat leírása:
                          6     ;               Ez csak egy üres feladatváz
                          7     ;               ide kellene leírni a feladat leírását
                          8     ; -----------------------------------------------------------
                          9     
                         10     $nomod51  ; a sztenderd 8051 regiszter definíciók nem szükségesek
                         11     
                         12     ;$include (SI_EFM8BB3_Defs.inc) ; regiszter és SFR definíciók
                    +1   13     ;------------------------------------------------------------------------------
                    +1   14     ; Copyright 2014 Silicon Laboratories, Inc.
                    +1   15     ; All rights reserved. This program and the accompanying materials
                    +1   16     ; are made available under the terms of the Silicon Laboratories End User
                    +1   17     ; License Agreement which accompanies this distribution, and is available at
                    +1   18     ; http://developer.silabs.com/legal/version/v11/Silicon_Labs_Software_License_Agreement.
                               txt
                    +1   19     ; Original content and implementation provided by Silicon Laboratories.
                    +1   20     ;------------------------------------------------------------------------------
                    +1   21     ;Supported Devices:
                    +1   22     ;  EFM8BB31F16A_4QFN24
                    +1   23     ;  EFM8BB31F16A_5QFN32
                    +1   24     ;  EFM8BB31F16G_QFN24
                    +1   25     ;  EFM8BB31F16G_QFN32
                    +1   26     ;  EFM8BB31F16G_QFP32
                    +1   27     ;  EFM8BB31F16G_QSOP24
                    +1   28     ;  EFM8BB31F16I_4QFN24
                    +1   29     ;  EFM8BB31F16I_5QFN32
                    +1   30     ;  EFM8BB31F16I_QFN24
                    +1   31     ;  EFM8BB31F16I_QFN32
                    +1   32     ;  EFM8BB31F16I_QFP32
                    +1   33     ;  EFM8BB31F16I_QSOP24
                    +1   34     ;  EFM8BB31F32A_4QFN24
                    +1   35     ;  EFM8BB31F32A_5QFN32
                    +1   36     ;  EFM8BB31F32G_QFN24
                    +1   37     ;  EFM8BB31F32G_QFN32
                    +1   38     ;  EFM8BB31F32G_QFP32
                    +1   39     ;  EFM8BB31F32G_QSOP24
                    +1   40     ;  EFM8BB31F32I_4QFN24
                    +1   41     ;  EFM8BB31F32I_5QFN32
                    +1   42     ;  EFM8BB31F32I_QFN24
                    +1   43     ;  EFM8BB31F32I_QFN32
                    +1   44     ;  EFM8BB31F32I_QFP32
                    +1   45     ;  EFM8BB31F32I_QSOP24
                    +1   46     ;  EFM8BB31F64A_4QFN24
                    +1   47     ;  EFM8BB31F64A_5QFN32
                    +1   48     ;  EFM8BB31F64G_QFN24
                    +1   49     ;  EFM8BB31F64G_QFN32
                    +1   50     ;  EFM8BB31F64G_QFP32
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE     2

                    +1   51     ;  EFM8BB31F64G_QSOP24
                    +1   52     ;  EFM8BB31F64I_4QFN24
                    +1   53     ;  EFM8BB31F64I_5QFN32
                    +1   54     ;  EFM8BB31F64I_QFN24
                    +1   55     ;  EFM8BB31F64I_QFN32
                    +1   56     ;  EFM8BB31F64I_QFP32
                    +1   57     ;  EFM8BB31F64I_QSOP24
                    +1   58     
                    +1   59     ;-----------------------------------------------------------------------------
                    +1   60     ; Register Definitions
                    +1   61     ;-----------------------------------------------------------------------------
 00E0               +1   62     ACC       DATA 0E0H; Accumulator                              
 00B6               +1   63     ADC0ASAH  DATA 0B6H; ADC0 Autoscan Start Address High Byte    
 00B5               +1   64     ADC0ASAL  DATA 0B5H; ADC0 Autoscan Start Address Low Byte     
 00A1               +1   65     ADC0ASCF  DATA 0A1H; ADC0 Autoscan Configuration              
 00C7               +1   66     ADC0ASCT  DATA 0C7H; ADC0 Autoscan Output Count               
 00BC               +1   67     ADC0CF0   DATA 0BCH; ADC0 Configuration                       
 00B9               +1   68     ADC0CF1   DATA 0B9H; ADC0 Configuration                       
 00DF               +1   69     ADC0CF2   DATA 0DFH; ADC0 Power Control                       
 00E8               +1   70     ADC0CN0   DATA 0E8H; ADC0 Control 0                           
 00B2               +1   71     ADC0CN1   DATA 0B2H; ADC0 Control 1                           
 00B3               +1   72     ADC0CN2   DATA 0B3H; ADC0 Control 2                           
 00C4               +1   73     ADC0GTH   DATA 0C4H; ADC0 Greater-Than High Byte              
 00C3               +1   74     ADC0GTL   DATA 0C3H; ADC0 Greater-Than Low Byte               
 00BE               +1   75     ADC0H     DATA 0BEH; ADC0 Data Word High Byte                 
 00BD               +1   76     ADC0L     DATA 0BDH; ADC0 Data Word Low Byte                  
 00C6               +1   77     ADC0LTH   DATA 0C6H; ADC0 Less-Than High Byte                 
 00C5               +1   78     ADC0LTL   DATA 0C5H; ADC0 Less-Than Low Byte                  
 00BB               +1   79     ADC0MX    DATA 0BBH; ADC0 Multiplexer Selection               
 00F0               +1   80     B         DATA 0F0H; B Register                               
 008E               +1   81     CKCON0    DATA 08EH; Clock Control 0                          
 00A6               +1   82     CKCON1    DATA 0A6H; Clock Control 1                          
 00C6               +1   83     CLEN0     DATA 0C6H; Configurable Logic Enable 0              
 00C7               +1   84     CLIE0     DATA 0C7H; Configurable Logic Interrupt Enable 0    
 00E8               +1   85     CLIF0     DATA 0E8H; Configurable Logic Interrupt Flag 0      
 00A9               +1   86     CLKSEL    DATA 0A9H; Clock Select                             
 00D1               +1   87     CLOUT0    DATA 0D1H; Configurable Logic Output 0              
 00B1               +1   88     CLU0CF    DATA 0B1H; Configurable Logic Unit 0 Configuration  
 00AF               +1   89     CLU0FN    DATA 0AFH; Configurable Logic Unit 0 Function Select
 0084               +1   90     CLU0MX    DATA 084H; Configurable Logic Unit 0 Multiplexer    
 00B3               +1   91     CLU1CF    DATA 0B3H; Configurable Logic Unit 1 Configuration  
 00B2               +1   92     CLU1FN    DATA 0B2H; Configurable Logic Unit 1 Function Select
 0085               +1   93     CLU1MX    DATA 085H; Configurable Logic Unit 1 Multiplexer    
 00B6               +1   94     CLU2CF    DATA 0B6H; Configurable Logic Unit 2 Configuration  
 00B5               +1   95     CLU2FN    DATA 0B5H; Configurable Logic Unit 2 Function Select
 0091               +1   96     CLU2MX    DATA 091H; Configurable Logic Unit 2 Multiplexer    
 00BF               +1   97     CLU3CF    DATA 0BFH; Configurable Logic Unit 3 Configuration  
 00BE               +1   98     CLU3FN    DATA 0BEH; Configurable Logic Unit 3 Function Select
 00AE               +1   99     CLU3MX    DATA 0AEH; Configurable Logic Unit 3 Multiplexer    
 009B               +1  100     CMP0CN0   DATA 09BH; Comparator 0 Control 0                   
 0099               +1  101     CMP0CN1   DATA 099H; Comparator 0 Control 1                   
 009D               +1  102     CMP0MD    DATA 09DH; Comparator 0 Mode                        
 009F               +1  103     CMP0MX    DATA 09FH; Comparator 0 Multiplexer Selection       
 00BF               +1  104     CMP1CN0   DATA 0BFH; Comparator 1 Control 0                   
 00AC               +1  105     CMP1CN1   DATA 0ACH; Comparator 1 Control 1                   
 00AB               +1  106     CMP1MD    DATA 0ABH; Comparator 1 Mode                        
 00AA               +1  107     CMP1MX    DATA 0AAH; Comparator 1 Multiplexer Selection       
 00CE               +1  108     CRC0CN0   DATA 0CEH; CRC0 Control 0                           
 0086               +1  109     CRC0CN1   DATA 086H; CRC0 Control 1                           
 00D3               +1  110     CRC0CNT   DATA 0D3H; CRC0 Automatic Flash Sector Count        
 00CB               +1  111     CRC0DAT   DATA 0CBH; CRC0 Data Output                         
 00CF               +1  112     CRC0FLIP  DATA 0CFH; CRC0 Bit Flip                            
 00CA               +1  113     CRC0IN    DATA 0CAH; CRC0 Data Input                          
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE     3

 00D2               +1  114     CRC0ST    DATA 0D2H; CRC0 Automatic Flash Sector Start        
 0091               +1  115     DAC0CF0   DATA 091H; DAC0 Configuration 0                     
 0092               +1  116     DAC0CF1   DATA 092H; DAC0 Configuration 1                     
 0085               +1  117     DAC0H     DATA 085H; DAC0 Data Word High Byte                 
 0084               +1  118     DAC0L     DATA 084H; DAC0 Data Word Low Byte                  
 0093               +1  119     DAC1CF0   DATA 093H; DAC1 Configuration 0                     
 0094               +1  120     DAC1CF1   DATA 094H; DAC1 Configuration 1                     
 008A               +1  121     DAC1H     DATA 08AH; DAC1 Data Word High Byte                 
 0089               +1  122     DAC1L     DATA 089H; DAC1 Data Word Low Byte                  
 0095               +1  123     DAC2CF0   DATA 095H; DAC2 Configuration 0                     
 0096               +1  124     DAC2CF1   DATA 096H; DAC2 Configuration 1                     
 008C               +1  125     DAC2H     DATA 08CH; DAC2 Data Word High Byte                 
 008B               +1  126     DAC2L     DATA 08BH; DAC2 Data Word Low Byte                  
 009A               +1  127     DAC3CF0   DATA 09AH; DAC3 Configuration 0                     
 009C               +1  128     DAC3CF1   DATA 09CH; DAC3 Configuration 1                     
 008E               +1  129     DAC3H     DATA 08EH; DAC3 Data Word High Byte                 
 008D               +1  130     DAC3L     DATA 08DH; DAC3 Data Word Low Byte                  
 0088               +1  131     DACGCF0   DATA 088H; DAC Global Configuration 0               
 0098               +1  132     DACGCF1   DATA 098H; DAC Global Configuration 1               
 00A2               +1  133     DACGCF2   DATA 0A2H; DAC Global Configuration 2               
 00AD               +1  134     DERIVID   DATA 0ADH; Derivative Identification                
 00B5               +1  135     DEVICEID  DATA 0B5H; Device Identification                    
 0083               +1  136     DPH       DATA 083H; Data Pointer High                        
 0082               +1  137     DPL       DATA 082H; Data Pointer Low                         
 00E6               +1  138     EIE1      DATA 0E6H; Extended Interrupt Enable 1              
 00F3               +1  139     EIE2      DATA 0F3H; Extended Interrupt Enable 2              
 00BB               +1  140     EIP1      DATA 0BBH; Extended Interrupt Priority 1 Low        
 00EE               +1  141     EIP1H     DATA 0EEH; Extended Interrupt Priority 1 High       
 00ED               +1  142     EIP2      DATA 0EDH; Extended Interrupt Priority 2            
 00F6               +1  143     EIP2H     DATA 0F6H; Extended Interrupt Priority 2 High       
 00E7               +1  144     EMI0CN    DATA 0E7H; External Memory Interface Control        
 00B7               +1  145     FLKEY     DATA 0B7H; Flash Lock and Key                       
 00C7               +1  146     HFO0CAL   DATA 0C7H; High Frequency Oscillator 0 Calibration  
 00D6               +1  147     HFO1CAL   DATA 0D6H; High Frequency Oscillator 1 Calibration  
 00EF               +1  148     HFOCN     DATA 0EFH; High Frequency Oscillator Control        
 00FF               +1  149     I2C0ADM   DATA 0FFH; I2C0 Slave Address Mask                  
 00BA               +1  150     I2C0CN0   DATA 0BAH; I2C0 Control                             
 00BC               +1  151     I2C0DIN   DATA 0BCH; I2C0 Received Data                       
 00BB               +1  152     I2C0DOUT  DATA 0BBH; I2C0 Transmit Data                       
 00AD               +1  153     I2C0FCN0  DATA 0ADH; I2C0 FIFO Control 0                      
 00AB               +1  154     I2C0FCN1  DATA 0ABH; I2C0 FIFO Control 1                      
 00F5               +1  155     I2C0FCT   DATA 0F5H; I2C0 FIFO Count                          
 00BD               +1  156     I2C0SLAD  DATA 0BDH; I2C0 Slave Address                       
 00B9               +1  157     I2C0STAT  DATA 0B9H; I2C0 Status                              
 00A8               +1  158     IE        DATA 0A8H; Interrupt Enable                         
 00B8               +1  159     IP        DATA 0B8H; Interrupt Priority                       
 00F2               +1  160     IPH       DATA 0F2H; Interrupt Priority High                  
 00E4               +1  161     IT01CF    DATA 0E4H; INT0/INT1 Configuration                  
 00B1               +1  162     LFO0CN    DATA 0B1H; Low Frequency Oscillator Control         
 0080               +1  163     P0        DATA 080H; Port 0 Pin Latch                         
 00FE               +1  164     P0MASK    DATA 0FEH; Port 0 Mask                              
 00FD               +1  165     P0MAT     DATA 0FDH; Port 0 Match                             
 00F1               +1  166     P0MDIN    DATA 0F1H; Port 0 Input Mode                        
 00A4               +1  167     P0MDOUT   DATA 0A4H; Port 0 Output Mode                       
 00D4               +1  168     P0SKIP    DATA 0D4H; Port 0 Skip                              
 0090               +1  169     P1        DATA 090H; Port 1 Pin Latch                         
 00EE               +1  170     P1MASK    DATA 0EEH; Port 1 Mask                              
 00ED               +1  171     P1MAT     DATA 0EDH; Port 1 Match                             
 00F2               +1  172     P1MDIN    DATA 0F2H; Port 1 Input Mode                        
 00A5               +1  173     P1MDOUT   DATA 0A5H; Port 1 Output Mode                       
 00D5               +1  174     P1SKIP    DATA 0D5H; Port 1 Skip                              
 00A0               +1  175     P2        DATA 0A0H; Port 2 Pin Latch                         
 00FC               +1  176     P2MASK    DATA 0FCH; Port 2 Mask                              
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE     4

 00FB               +1  177     P2MAT     DATA 0FBH; Port 2 Match                             
 00F3               +1  178     P2MDIN    DATA 0F3H; Port 2 Input Mode                        
 00A6               +1  179     P2MDOUT   DATA 0A6H; Port 2 Output Mode                       
 00CC               +1  180     P2SKIP    DATA 0CCH; Port 2 Skip                              
 00B0               +1  181     P3        DATA 0B0H; Port 3 Pin Latch                         
 00F4               +1  182     P3MDIN    DATA 0F4H; Port 3 Input Mode                        
 009C               +1  183     P3MDOUT   DATA 09CH; Port 3 Output Mode                       
 009E               +1  184     PCA0CENT  DATA 09EH; PCA Center Alignment Enable              
 009C               +1  185     PCA0CLR   DATA 09CH; PCA Comparator Clear Control             
 00D8               +1  186     PCA0CN0   DATA 0D8H; PCA Control                              
 00FC               +1  187     PCA0CPH0  DATA 0FCH; PCA Channel 0 Capture Module High Byte   
 00EA               +1  188     PCA0CPH1  DATA 0EAH; PCA Channel 1 Capture Module High Byte   
 00EC               +1  189     PCA0CPH2  DATA 0ECH; PCA Channel 2 Capture Module High Byte   
 00F5               +1  190     PCA0CPH3  DATA 0F5H; PCA Channel 3 Capture Module High Byte   
 0085               +1  191     PCA0CPH4  DATA 085H; PCA Channel 4 Capture Module High Byte   
 00DE               +1  192     PCA0CPH5  DATA 0DEH; PCA Channel 5 Capture Module High Byte   
 00FB               +1  193     PCA0CPL0  DATA 0FBH; PCA Channel 0 Capture Module Low Byte    
 00E9               +1  194     PCA0CPL1  DATA 0E9H; PCA Channel 1 Capture Module Low Byte    
 00EB               +1  195     PCA0CPL2  DATA 0EBH; PCA Channel 2 Capture Module Low Byte    
 00F4               +1  196     PCA0CPL3  DATA 0F4H; PCA Channel 3 Capture Module Low Byte    
 0084               +1  197     PCA0CPL4  DATA 084H; PCA Channel 4 Capture Module Low Byte    
 00DD               +1  198     PCA0CPL5  DATA 0DDH; PCA Channel 5 Capture Module Low Byte    
 00DA               +1  199     PCA0CPM0  DATA 0DAH; PCA Channel 0 Capture/Compare Mode       
 00DB               +1  200     PCA0CPM1  DATA 0DBH; PCA Channel 1 Capture/Compare Mode       
 00DC               +1  201     PCA0CPM2  DATA 0DCH; PCA Channel 2 Capture/Compare Mode       
 00AE               +1  202     PCA0CPM3  DATA 0AEH; PCA Channel 3 Capture/Compare Mode       
 00AF               +1  203     PCA0CPM4  DATA 0AFH; PCA Channel 4 Capture/Compare Mode       
 00CC               +1  204     PCA0CPM5  DATA 0CCH; PCA Channel 5 Capture/Compare Mode       
 00FA               +1  205     PCA0H     DATA 0FAH; PCA Counter/Timer High Byte              
 00F9               +1  206     PCA0L     DATA 0F9H; PCA Counter/Timer Low Byte               
 00D9               +1  207     PCA0MD    DATA 0D9H; PCA Mode                                 
 0096               +1  208     PCA0POL   DATA 096H; PCA Output Polarity                      
 00F7               +1  209     PCA0PWM   DATA 0F7H; PCA PWM Configuration                    
 0087               +1  210     PCON0     DATA 087H; Power Control                            
 00CD               +1  211     PCON1     DATA 0CDH; Power Control 1                          
 00C1               +1  212     PFE0CN    DATA 0C1H; Prefetch Engine Control                  
 00F6               +1  213     PRTDRV    DATA 0F6H; Port Drive Strength                      
 008F               +1  214     PSCTL     DATA 08FH; Program Store Control                    
 00AA               +1  215     PSTAT0    DATA 0AAH; PMU Status 0                             
 00D0               +1  216     PSW       DATA 0D0H; Program Status Word                      
 00D1               +1  217     REF0CN    DATA 0D1H; Voltage Reference Control                
 00C9               +1  218     REG0CN    DATA 0C9H; Voltage Regulator 0 Control              
 00B6               +1  219     REVID     DATA 0B6H; Revision Identifcation                   
 00EF               +1  220     RSTSRC    DATA 0EFH; Reset Source                             
 0094               +1  221     SBCON1    DATA 094H; UART1 Baud Rate Generator Control        
 0096               +1  222     SBRLH1    DATA 096H; UART1 Baud Rate Generator High Byte      
 0095               +1  223     SBRLL1    DATA 095H; UART1 Baud Rate Generator Low Byte       
 0099               +1  224     SBUF0     DATA 099H; UART0 Serial Port Data Buffer            
 0092               +1  225     SBUF1     DATA 092H; UART1 Serial Port Data Buffer            
 0098               +1  226     SCON0     DATA 098H; UART0 Serial Port Control                
 00C8               +1  227     SCON1     DATA 0C8H; UART1 Serial Port Control                
 00A7               +1  228     SFRPAGE   DATA 0A7H; SFR Page                                 
 00BC               +1  229     SFRPGCN   DATA 0BCH; SFR Page Control                         
 00D7               +1  230     SFRSTACK  DATA 0D7H; SFR Page Stack                           
 00D6               +1  231     SMB0ADM   DATA 0D6H; SMBus 0 Slave Address Mask               
 00D7               +1  232     SMB0ADR   DATA 0D7H; SMBus 0 Slave Address                    
 00C1               +1  233     SMB0CF    DATA 0C1H; SMBus 0 Configuration                    
 00C0               +1  234     SMB0CN0   DATA 0C0H; SMBus 0 Control                          
 00C2               +1  235     SMB0DAT   DATA 0C2H; SMBus 0 Data                             
 00C3               +1  236     SMB0FCN0  DATA 0C3H; SMBus 0 FIFO Control 0                   
 00C4               +1  237     SMB0FCN1  DATA 0C4H; SMBus 0 FIFO Control 1                   
 00EF               +1  238     SMB0FCT   DATA 0EFH; SMBus 0 FIFO Count                       
 00C5               +1  239     SMB0RXLN  DATA 0C5H; SMBus 0 Receive Length Counter           
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE     5

 00AC               +1  240     SMB0TC    DATA 0ACH; SMBus 0 Timing and Pin Control           
 0093               +1  241     SMOD1     DATA 093H; UART1 Mode                               
 0081               +1  242     SP        DATA 081H; Stack Pointer                            
 00A1               +1  243     SPI0CFG   DATA 0A1H; SPI0 Configuration                       
 00A2               +1  244     SPI0CKR   DATA 0A2H; SPI0 Clock Rate                          
 00F8               +1  245     SPI0CN0   DATA 0F8H; SPI0 Control                             
 00A3               +1  246     SPI0DAT   DATA 0A3H; SPI0 Data                                
 009A               +1  247     SPI0FCN0  DATA 09AH; SPI0 FIFO Control 0                      
 009B               +1  248     SPI0FCN1  DATA 09BH; SPI0 FIFO Control 1                      
 00F7               +1  249     SPI0FCT   DATA 0F7H; SPI0 FIFO Count                          
 00DF               +1  250     SPI0PCF   DATA 0DFH; SPI0 Pin Configuration                   
 0088               +1  251     TCON      DATA 088H; Timer 0/1 Control                        
 008C               +1  252     TH0       DATA 08CH; Timer 0 High Byte                        
 008D               +1  253     TH1       DATA 08DH; Timer 1 High Byte                        
 008A               +1  254     TL0       DATA 08AH; Timer 0 Low Byte                         
 008B               +1  255     TL1       DATA 08BH; Timer 1 Low Byte                         
 0089               +1  256     TMOD      DATA 089H; Timer 0/1 Mode                           
 00C8               +1  257     TMR2CN0   DATA 0C8H; Timer 2 Control 0                        
 00FD               +1  258     TMR2CN1   DATA 0FDH; Timer 2 Control 1                        
 00CF               +1  259     TMR2H     DATA 0CFH; Timer 2 High Byte                        
 00CE               +1  260     TMR2L     DATA 0CEH; Timer 2 Low Byte                         
 00CB               +1  261     TMR2RLH   DATA 0CBH; Timer 2 Reload High Byte                 
 00CA               +1  262     TMR2RLL   DATA 0CAH; Timer 2 Reload Low Byte                  
 0091               +1  263     TMR3CN0   DATA 091H; Timer 3 Control 0                        
 00FE               +1  264     TMR3CN1   DATA 0FEH; Timer 3 Control 1                        
 0095               +1  265     TMR3H     DATA 095H; Timer 3 High Byte                        
 0094               +1  266     TMR3L     DATA 094H; Timer 3 Low Byte                         
 0093               +1  267     TMR3RLH   DATA 093H; Timer 3 Reload High Byte                 
 0092               +1  268     TMR3RLL   DATA 092H; Timer 3 Reload Low Byte                  
 0098               +1  269     TMR4CN0   DATA 098H; Timer 4 Control 0                        
 00FF               +1  270     TMR4CN1   DATA 0FFH; Timer 4 Control 1                        
 00A5               +1  271     TMR4H     DATA 0A5H; Timer 4 High Byte                        
 00A4               +1  272     TMR4L     DATA 0A4H; Timer 4 Low Byte                         
 00A3               +1  273     TMR4RLH   DATA 0A3H; Timer 4 Reload High Byte                 
 00A2               +1  274     TMR4RLL   DATA 0A2H; Timer 4 Reload Low Byte                  
 00C0               +1  275     TMR5CN0   DATA 0C0H; Timer 5 Control 0                        
 00F1               +1  276     TMR5CN1   DATA 0F1H; Timer 5 Control 1                        
 00D5               +1  277     TMR5H     DATA 0D5H; Timer 5 High Byte                        
 00D4               +1  278     TMR5L     DATA 0D4H; Timer 5 Low Byte                         
 00D3               +1  279     TMR5RLH   DATA 0D3H; Timer 5 Reload High Byte                 
 00D2               +1  280     TMR5RLL   DATA 0D2H; Timer 5 Reload Low Byte                  
 00D9               +1  281     UART0PCF  DATA 0D9H; UART0 Pin Configuration                  
 009D               +1  282     UART1FCN0 DATA 09DH; UART1 FIFO Control 0                     
 00D8               +1  283     UART1FCN1 DATA 0D8H; UART1 FIFO Control 1                     
 00FA               +1  284     UART1FCT  DATA 0FAH; UART1 FIFO Count                         
 009E               +1  285     UART1LIN  DATA 09EH; UART1 LIN Configuration                  
 00DA               +1  286     UART1PCF  DATA 0DAH; UART1 Pin Configuration                  
 00FF               +1  287     VDM0CN    DATA 0FFH; Supply Monitor Control                   
 0097               +1  288     WDTCN     DATA 097H; Watchdog Timer Control                   
 00E1               +1  289     XBR0      DATA 0E1H; Port I/O Crossbar 0                      
 00E2               +1  290     XBR1      DATA 0E2H; Port I/O Crossbar 1                      
 00E3               +1  291     XBR2      DATA 0E3H; Port I/O Crossbar 2                      
 0086               +1  292     XOSC0CN   DATA 086H; External Oscillator Control              
                    +1  293     
                    +1  294     ;------------------------------------------------------------------------------
                    +1  295     ; 16-bit Register Definitions (may not work on all compilers)
                    +1  296     ;------------------------------------------------------------------------------
 00B5               +1  297     ADC0ASA DATA 0B5H ; ADC0 Autoscan Start Address Low Byte 
 00C3               +1  298     ADC0GT  DATA 0C3H ; ADC0 Greater-Than Low Byte           
 00BD               +1  299     ADC0    DATA 0BDH ; ADC0 Data Word Low Byte              
 00C5               +1  300     ADC0LT  DATA 0C5H ; ADC0 Less-Than Low Byte              
 0082               +1  301     DP      DATA 082H ; Data Pointer Low                     
 00FB               +1  302     PCA0CP0 DATA 0FBH ; PCA Channel 0 Capture Module Low Byte
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE     6

 00E9               +1  303     PCA0CP1 DATA 0E9H ; PCA Channel 1 Capture Module Low Byte
 00EB               +1  304     PCA0CP2 DATA 0EBH ; PCA Channel 2 Capture Module Low Byte
 00F4               +1  305     PCA0CP3 DATA 0F4H ; PCA Channel 3 Capture Module Low Byte
 0084               +1  306     PCA0CP4 DATA 084H ; PCA Channel 4 Capture Module Low Byte
 00DD               +1  307     PCA0CP5 DATA 0DDH ; PCA Channel 5 Capture Module Low Byte
 00F9               +1  308     PCA0    DATA 0F9H ; PCA Counter/Timer Low Byte           
 00CE               +1  309     TMR2    DATA 0CEH ; Timer 2 Low Byte                     
 00CA               +1  310     TMR2RL  DATA 0CAH ; Timer 2 Reload Low Byte              
 0094               +1  311     TMR3    DATA 094H ; Timer 3 Low Byte                     
 0092               +1  312     TMR3RL  DATA 092H ; Timer 3 Reload Low Byte              
 00A4               +1  313     TMR4    DATA 0A4H ; Timer 4 Low Byte                     
 00A2               +1  314     TMR4RL  DATA 0A2H ; Timer 4 Reload Low Byte              
 00D4               +1  315     TMR5    DATA 0D4H ; Timer 5 Low Byte                     
 00D2               +1  316     TMR5RL  DATA 0D2H ; Timer 5 Reload Low Byte              
                    +1  317     
                    +1  318     ;------------------------------------------------------------------------------
                    +1  319     ; Indirect Register Definitions
                    +1  320     ;------------------------------------------------------------------------------
                    +1  321     
                    +1  322     ;------------------------------------------------------------------------------
                    +1  323     ; Bit Definitions
                    +1  324     ;------------------------------------------------------------------------------
                    +1  325     
                    +1  326     ; ACC 0xE0 (Accumulator)
 00E0.0             +1  327     ACC_ACC0 BIT ACC.0 ; Accumulator Bit 0
 00E0.1             +1  328     ACC_ACC1 BIT ACC.1 ; Accumulator Bit 1
 00E0.2             +1  329     ACC_ACC2 BIT ACC.2 ; Accumulator Bit 2
 00E0.3             +1  330     ACC_ACC3 BIT ACC.3 ; Accumulator Bit 3
 00E0.4             +1  331     ACC_ACC4 BIT ACC.4 ; Accumulator Bit 4
 00E0.5             +1  332     ACC_ACC5 BIT ACC.5 ; Accumulator Bit 5
 00E0.6             +1  333     ACC_ACC6 BIT ACC.6 ; Accumulator Bit 6
 00E0.7             +1  334     ACC_ACC7 BIT ACC.7 ; Accumulator Bit 7
                    +1  335     
                    +1  336     ; ADC0CN0 0xE8 (ADC0 Control 0)
 00E8.0             +1  337     ADC0CN0_TEMPE  BIT ADC0CN0.0 ; Temperature Sensor Enable         
 00E8.1             +1  338     ADC0CN0_ADGN0  BIT ADC0CN0.1 ; Gain Control Bit 0                
 00E8.2             +1  339     ADC0CN0_ADGN1  BIT ADC0CN0.2 ; Gain Control Bit 1                
 00E8.3             +1  340     ADC0CN0_ADWINT BIT ADC0CN0.3 ; Window Compare Interrupt Flag     
 00E8.4             +1  341     ADC0CN0_ADBUSY BIT ADC0CN0.4 ; ADC Busy                          
 00E8.5             +1  342     ADC0CN0_ADINT  BIT ADC0CN0.5 ; Conversion Complete Interrupt Flag
 00E8.6             +1  343     ADC0CN0_IPOEN  BIT ADC0CN0.6 ; Idle Powered-off Enable           
 00E8.7             +1  344     ADC0CN0_ADEN   BIT ADC0CN0.7 ; ADC Enable                        
                    +1  345     
                    +1  346     ; B 0xF0 (B Register)
 00F0.0             +1  347     B_B0 BIT B.0 ; B Register Bit 0
 00F0.1             +1  348     B_B1 BIT B.1 ; B Register Bit 1
 00F0.2             +1  349     B_B2 BIT B.2 ; B Register Bit 2
 00F0.3             +1  350     B_B3 BIT B.3 ; B Register Bit 3
 00F0.4             +1  351     B_B4 BIT B.4 ; B Register Bit 4
 00F0.5             +1  352     B_B5 BIT B.5 ; B Register Bit 5
 00F0.6             +1  353     B_B6 BIT B.6 ; B Register Bit 6
 00F0.7             +1  354     B_B7 BIT B.7 ; B Register Bit 7
                    +1  355     
                    +1  356     ; CLIF0 0xE8 (Configurable Logic Interrupt Flag 0)
 00E8.0             +1  357     CLIF0_C0FIF BIT CLIF0.0 ; CLU0 Falling Edge Flag
 00E8.1             +1  358     CLIF0_C0RIF BIT CLIF0.1 ; CLU0 Rising Edge Flag 
 00E8.2             +1  359     CLIF0_C1FIF BIT CLIF0.2 ; CLU1 Falling Edge Flag
 00E8.3             +1  360     CLIF0_C1RIF BIT CLIF0.3 ; CLU1 Rising Edge Flag 
 00E8.4             +1  361     CLIF0_C2FIF BIT CLIF0.4 ; CLU2 Falling Edge Flag
 00E8.5             +1  362     CLIF0_C2RIF BIT CLIF0.5 ; CLU2 Rising Edge Flag 
 00E8.6             +1  363     CLIF0_C3FIF BIT CLIF0.6 ; CLU3 Falling Edge Flag
 00E8.7             +1  364     CLIF0_C3RIF BIT CLIF0.7 ; CLU3 Rising Edge Flag 
                    +1  365     
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE     7

                    +1  366     ; DACGCF0 0x88 (DAC Global Configuration 0)
 0088.0             +1  367     DACGCF0_D1SRC0   BIT DACGCF0.0 ; DAC1 Data Source Bit 0                
 0088.1             +1  368     DACGCF0_D1SRC1   BIT DACGCF0.1 ; DAC1 Data Source Bit 1                
 0088.2             +1  369     DACGCF0_D1AMEN   BIT DACGCF0.2 ; DAC1 Alternating Mode Enable          
 0088.3             +1  370     DACGCF0_D01REFSL BIT DACGCF0.3 ; DAC0 and DAC1 Reference Voltage Select
 0088.4             +1  371     DACGCF0_D3SRC0   BIT DACGCF0.4 ; DAC3 Data Source Bit 0                
 0088.5             +1  372     DACGCF0_D3SRC1   BIT DACGCF0.5 ; DAC3 Data Source Bit 1                
 0088.6             +1  373     DACGCF0_D3AMEN   BIT DACGCF0.6 ; DAC3 Alternating Mode Enable          
 0088.7             +1  374     DACGCF0_D23REFSL BIT DACGCF0.7 ; DAC2 and DAC3 Reference Voltage Select
                    +1  375     
                    +1  376     ; DACGCF1 0x98 (DAC Global Configuration 1)
 0098.0             +1  377     DACGCF1_D0UDIS BIT DACGCF1.0 ; DAC0 Update Disable
 0098.1             +1  378     DACGCF1_D1UDIS BIT DACGCF1.1 ; DAC1 Update Disable
 0098.2             +1  379     DACGCF1_D2UDIS BIT DACGCF1.2 ; DAC2 Update Disable
 0098.3             +1  380     DACGCF1_D3UDIS BIT DACGCF1.3 ; DAC3 Update Disable
                    +1  381     
                    +1  382     ; IE 0xA8 (Interrupt Enable)
 00A8.0             +1  383     IE_EX0   BIT IE.0 ; External Interrupt 0 Enable
 00A8.1             +1  384     IE_ET0   BIT IE.1 ; Timer 0 Interrupt Enable   
 00A8.2             +1  385     IE_EX1   BIT IE.2 ; External Interrupt 1 Enable
 00A8.3             +1  386     IE_ET1   BIT IE.3 ; Timer 1 Interrupt Enable   
 00A8.4             +1  387     IE_ES0   BIT IE.4 ; UART0 Interrupt Enable     
 00A8.5             +1  388     IE_ET2   BIT IE.5 ; Timer 2 Interrupt Enable   
 00A8.6             +1  389     IE_ESPI0 BIT IE.6 ; SPI0 Interrupt Enable      
 00A8.7             +1  390     IE_EA    BIT IE.7 ; All Interrupts Enable      
                    +1  391     
                    +1  392     ; IP 0xB8 (Interrupt Priority)
 00B8.0             +1  393     IP_PX0   BIT IP.0 ; External Interrupt 0 Priority Control LSB                        
 00B8.1             +1  394     IP_PT0   BIT IP.1 ; Timer 0 Interrupt Priority Control LSB                           
 00B8.2             +1  395     IP_PX1   BIT IP.2 ; External Interrupt 1 Priority Control LSB                        
 00B8.3             +1  396     IP_PT1   BIT IP.3 ; Timer 1 Interrupt Priority Control LSB                           
 00B8.4             +1  397     IP_PS0   BIT IP.4 ; UART0 Interrupt Priority Control LSB                             
 00B8.5             +1  398     IP_PT2   BIT IP.5 ; Timer 2 Interrupt Priority Control LSB                           
 00B8.6             +1  399     IP_PSPI0 BIT IP.6 ; Serial Peripheral Interface (SPI0) Interrupt Priority Control LSB
                    +1  400     
                    +1  401     ; P0 0x80 (Port 0 Pin Latch)
 0080.0             +1  402     P0_B0 BIT P0.0 ; Port 0 Bit 0 Latch
 0080.1             +1  403     P0_B1 BIT P0.1 ; Port 0 Bit 1 Latch
 0080.2             +1  404     P0_B2 BIT P0.2 ; Port 0 Bit 2 Latch
 0080.3             +1  405     P0_B3 BIT P0.3 ; Port 0 Bit 3 Latch
 0080.4             +1  406     P0_B4 BIT P0.4 ; Port 0 Bit 4 Latch
 0080.5             +1  407     P0_B5 BIT P0.5 ; Port 0 Bit 5 Latch
 0080.6             +1  408     P0_B6 BIT P0.6 ; Port 0 Bit 6 Latch
 0080.7             +1  409     P0_B7 BIT P0.7 ; Port 0 Bit 7 Latch
                    +1  410     
                    +1  411     ; P1 0x90 (Port 1 Pin Latch)
 0090.0             +1  412     P1_B0 BIT P1.0 ; Port 1 Bit 0 Latch
 0090.1             +1  413     P1_B1 BIT P1.1 ; Port 1 Bit 1 Latch
 0090.2             +1  414     P1_B2 BIT P1.2 ; Port 1 Bit 2 Latch
 0090.3             +1  415     P1_B3 BIT P1.3 ; Port 1 Bit 3 Latch
 0090.4             +1  416     P1_B4 BIT P1.4 ; Port 1 Bit 4 Latch
 0090.5             +1  417     P1_B5 BIT P1.5 ; Port 1 Bit 5 Latch
 0090.6             +1  418     P1_B6 BIT P1.6 ; Port 1 Bit 6 Latch
 0090.7             +1  419     P1_B7 BIT P1.7 ; Port 1 Bit 7 Latch
                    +1  420     
                    +1  421     ; P2 0xA0 (Port 2 Pin Latch)
 00A0.0             +1  422     P2_B0 BIT P2.0 ; Port 2 Bit 0 Latch
 00A0.1             +1  423     P2_B1 BIT P2.1 ; Port 2 Bit 1 Latch
 00A0.2             +1  424     P2_B2 BIT P2.2 ; Port 2 Bit 2 Latch
 00A0.3             +1  425     P2_B3 BIT P2.3 ; Port 2 Bit 3 Latch
 00A0.4             +1  426     P2_B4 BIT P2.4 ; Port 2 Bit 4 Latch
 00A0.5             +1  427     P2_B5 BIT P2.5 ; Port 2 Bit 5 Latch
 00A0.6             +1  428     P2_B6 BIT P2.6 ; Port 2 Bit 6 Latch
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE     8

                    +1  429     
                    +1  430     ; P3 0xB0 (Port 3 Pin Latch)
 00B0.0             +1  431     P3_B0 BIT P3.0 ; Port 3 Bit 0 Latch
 00B0.1             +1  432     P3_B1 BIT P3.1 ; Port 3 Bit 1 Latch
 00B0.2             +1  433     P3_B2 BIT P3.2 ; Port 3 Bit 2 Latch
 00B0.3             +1  434     P3_B3 BIT P3.3 ; Port 3 Bit 3 Latch
 00B0.4             +1  435     P3_B4 BIT P3.4 ; Port 3 Bit 4 Latch
 00B0.7             +1  436     P3_B7 BIT P3.7 ; Port 3 Bit 7 Latch
                    +1  437     
                    +1  438     ; PCA0CN0 0xD8 (PCA Control)
 00D8.0             +1  439     PCA0CN0_CCF0 BIT PCA0CN0.0 ; PCA Module 0 Capture/Compare Flag
 00D8.1             +1  440     PCA0CN0_CCF1 BIT PCA0CN0.1 ; PCA Module 1 Capture/Compare Flag
 00D8.2             +1  441     PCA0CN0_CCF2 BIT PCA0CN0.2 ; PCA Module 2 Capture/Compare Flag
 00D8.3             +1  442     PCA0CN0_CCF3 BIT PCA0CN0.3 ; PCA Module 3 Capture/Compare Flag
 00D8.4             +1  443     PCA0CN0_CCF4 BIT PCA0CN0.4 ; PCA Module 4 Capture/Compare Flag
 00D8.5             +1  444     PCA0CN0_CCF5 BIT PCA0CN0.5 ; PCA Module 5 Capture/Compare Flag
 00D8.6             +1  445     PCA0CN0_CR   BIT PCA0CN0.6 ; PCA Counter/Timer Run Control    
 00D8.7             +1  446     PCA0CN0_CF   BIT PCA0CN0.7 ; PCA Counter/Timer Overflow Flag  
                    +1  447     
                    +1  448     ; PSW 0xD0 (Program Status Word)
 00D0.0             +1  449     PSW_PARITY BIT PSW.0 ; Parity Flag               
 00D0.1             +1  450     PSW_F1     BIT PSW.1 ; User Flag 1               
 00D0.2             +1  451     PSW_OV     BIT PSW.2 ; Overflow Flag             
 00D0.3             +1  452     PSW_RS0    BIT PSW.3 ; Register Bank Select Bit 0
 00D0.4             +1  453     PSW_RS1    BIT PSW.4 ; Register Bank Select Bit 1
 00D0.5             +1  454     PSW_F0     BIT PSW.5 ; User Flag 0               
 00D0.6             +1  455     PSW_AC     BIT PSW.6 ; Auxiliary Carry Flag      
 00D0.7             +1  456     PSW_CY     BIT PSW.7 ; Carry Flag                
                    +1  457     
                    +1  458     ; SCON0 0x98 (UART0 Serial Port Control)
 0098.0             +1  459     SCON0_RI    BIT SCON0.0 ; Receive Interrupt Flag             
 0098.1             +1  460     SCON0_TI    BIT SCON0.1 ; Transmit Interrupt Flag            
 0098.2             +1  461     SCON0_RB8   BIT SCON0.2 ; Ninth Receive Bit                  
 0098.3             +1  462     SCON0_TB8   BIT SCON0.3 ; Ninth Transmission Bit             
 0098.4             +1  463     SCON0_REN   BIT SCON0.4 ; Receive Enable                     
 0098.5             +1  464     SCON0_MCE   BIT SCON0.5 ; Multiprocessor Communication Enable
 0098.7             +1  465     SCON0_SMODE BIT SCON0.7 ; Serial Port 0 Operation Mode       
                    +1  466     
                    +1  467     ; SCON1 0xC8 (UART1 Serial Port Control)
 00C8.0             +1  468     SCON1_RI   BIT SCON1.0 ; Receive Interrupt Flag   
 00C8.1             +1  469     SCON1_TI   BIT SCON1.1 ; Transmit Interrupt Flag  
 00C8.2             +1  470     SCON1_RBX  BIT SCON1.2 ; Extra Receive Bit        
 00C8.3             +1  471     SCON1_TBX  BIT SCON1.3 ; Extra Transmission Bit   
 00C8.4             +1  472     SCON1_REN  BIT SCON1.4 ; Receive Enable           
 00C8.6             +1  473     SCON1_PERR BIT SCON1.6 ; Parity Error Flag        
 00C8.7             +1  474     SCON1_OVR  BIT SCON1.7 ; Receive FIFO Overrun Flag
                    +1  475     
                    +1  476     ; SMB0CN0 0xC0 (SMBus 0 Control)
 00C0.0             +1  477     SMB0CN0_SI      BIT SMB0CN0.0 ; SMBus Interrupt Flag            
 00C0.1             +1  478     SMB0CN0_ACK     BIT SMB0CN0.1 ; SMBus Acknowledge               
 00C0.2             +1  479     SMB0CN0_ARBLOST BIT SMB0CN0.2 ; SMBus Arbitration Lost Indicator
 00C0.3             +1  480     SMB0CN0_ACKRQ   BIT SMB0CN0.3 ; SMBus Acknowledge Request       
 00C0.4             +1  481     SMB0CN0_STO     BIT SMB0CN0.4 ; SMBus Stop Flag                 
 00C0.5             +1  482     SMB0CN0_STA     BIT SMB0CN0.5 ; SMBus Start Flag                
 00C0.6             +1  483     SMB0CN0_TXMODE  BIT SMB0CN0.6 ; SMBus Transmit Mode Indicator   
 00C0.7             +1  484     SMB0CN0_MASTER  BIT SMB0CN0.7 ; SMBus Master/Slave Indicator    
                    +1  485     
                    +1  486     ; SPI0CN0 0xF8 (SPI0 Control)
 00F8.0             +1  487     SPI0CN0_SPIEN  BIT SPI0CN0.0 ; SPI0 Enable            
 00F8.1             +1  488     SPI0CN0_TXNF   BIT SPI0CN0.1 ; TX FIFO Not Full       
 00F8.2             +1  489     SPI0CN0_NSSMD0 BIT SPI0CN0.2 ; Slave Select Mode Bit 0
 00F8.3             +1  490     SPI0CN0_NSSMD1 BIT SPI0CN0.3 ; Slave Select Mode Bit 1
 00F8.4             +1  491     SPI0CN0_RXOVRN BIT SPI0CN0.4 ; Receive Overrun Flag   
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE     9

 00F8.5             +1  492     SPI0CN0_MODF   BIT SPI0CN0.5 ; Mode Fault Flag        
 00F8.6             +1  493     SPI0CN0_WCOL   BIT SPI0CN0.6 ; Write Collision Flag   
 00F8.7             +1  494     SPI0CN0_SPIF   BIT SPI0CN0.7 ; SPI0 Interrupt Flag    
                    +1  495     
                    +1  496     ; TCON 0x88 (Timer 0/1 Control)
 0088.0             +1  497     TCON_IT0 BIT TCON.0 ; Interrupt 0 Type Select
 0088.1             +1  498     TCON_IE0 BIT TCON.1 ; External Interrupt 0   
 0088.2             +1  499     TCON_IT1 BIT TCON.2 ; Interrupt 1 Type Select
 0088.3             +1  500     TCON_IE1 BIT TCON.3 ; External Interrupt 1   
 0088.4             +1  501     TCON_TR0 BIT TCON.4 ; Timer 0 Run Control    
 0088.5             +1  502     TCON_TF0 BIT TCON.5 ; Timer 0 Overflow Flag  
 0088.6             +1  503     TCON_TR1 BIT TCON.6 ; Timer 1 Run Control    
 0088.7             +1  504     TCON_TF1 BIT TCON.7 ; Timer 1 Overflow Flag  
                    +1  505     
                    +1  506     ; TMR2CN0 0xC8 (Timer 2 Control 0)
 00C8.0             +1  507     TMR2CN0_T2XCLK0 BIT TMR2CN0.0 ; Timer 2 External Clock Select Bit 0
 00C8.1             +1  508     TMR2CN0_T2XCLK1 BIT TMR2CN0.1 ; Timer 2 External Clock Select Bit 1
 00C8.2             +1  509     TMR2CN0_TR2     BIT TMR2CN0.2 ; Timer 2 Run Control                
 00C8.3             +1  510     TMR2CN0_T2SPLIT BIT TMR2CN0.3 ; Timer 2 Split Mode Enable          
 00C8.4             +1  511     TMR2CN0_TF2CEN  BIT TMR2CN0.4 ; Timer 2 Capture Enable             
 00C8.5             +1  512     TMR2CN0_TF2LEN  BIT TMR2CN0.5 ; Timer 2 Low Byte Interrupt Enable  
 00C8.6             +1  513     TMR2CN0_TF2L    BIT TMR2CN0.6 ; Timer 2 Low Byte Overflow Flag     
 00C8.7             +1  514     TMR2CN0_TF2H    BIT TMR2CN0.7 ; Timer 2 High Byte Overflow Flag    
                    +1  515     
                    +1  516     ; TMR4CN0 0x98 (Timer 4 Control 0)
 0098.0             +1  517     TMR4CN0_T4XCLK0 BIT TMR4CN0.0 ; Timer 4 External Clock Select Bit 0
 0098.1             +1  518     TMR4CN0_T4XCLK1 BIT TMR4CN0.1 ; Timer 4 External Clock Select Bit 1
 0098.2             +1  519     TMR4CN0_TR4     BIT TMR4CN0.2 ; Timer 4 Run Control                
 0098.3             +1  520     TMR4CN0_T4SPLIT BIT TMR4CN0.3 ; Timer 4 Split Mode Enable          
 0098.4             +1  521     TMR4CN0_TF4CEN  BIT TMR4CN0.4 ; Timer 4 Capture Enable             
 0098.5             +1  522     TMR4CN0_TF4LEN  BIT TMR4CN0.5 ; Timer 4 Low Byte Interrupt Enable  
 0098.6             +1  523     TMR4CN0_TF4L    BIT TMR4CN0.6 ; Timer 4 Low Byte Overflow Flag     
 0098.7             +1  524     TMR4CN0_TF4H    BIT TMR4CN0.7 ; Timer 4 High Byte Overflow Flag    
                    +1  525     
                    +1  526     ; TMR5CN0 0xC0 (Timer 5 Control 0)
 00C0.0             +1  527     TMR5CN0_T5XCLK0 BIT TMR5CN0.0 ; Timer 5 External Clock Select Bit 0
 00C0.1             +1  528     TMR5CN0_T5XCLK1 BIT TMR5CN0.1 ; Timer 5 External Clock Select Bit 1
 00C0.2             +1  529     TMR5CN0_TR5     BIT TMR5CN0.2 ; Timer 5 Run Control                
 00C0.3             +1  530     TMR5CN0_T5SPLIT BIT TMR5CN0.3 ; Timer 5 Split Mode Enable          
 00C0.4             +1  531     TMR5CN0_TF5CEN  BIT TMR5CN0.4 ; Timer 5 Capture Enable             
 00C0.5             +1  532     TMR5CN0_TF5LEN  BIT TMR5CN0.5 ; Timer 5 Low Byte Interrupt Enable  
 00C0.6             +1  533     TMR5CN0_TF5L    BIT TMR5CN0.6 ; Timer 5 Low Byte Overflow Flag     
 00C0.7             +1  534     TMR5CN0_TF5H    BIT TMR5CN0.7 ; Timer 5 High Byte Overflow Flag    
                    +1  535     
                    +1  536     ; UART1FCN1 0xD8 (UART1 FIFO Control 1)
 00D8.0             +1  537     UART1FCN1_RIE    BIT UART1FCN1.0 ; Receive Interrupt Enable 
 00D8.1             +1  538     UART1FCN1_RXTO0  BIT UART1FCN1.1 ; Receive Timeout Bit 0    
 00D8.2             +1  539     UART1FCN1_RXTO1  BIT UART1FCN1.2 ; Receive Timeout Bit 1    
 00D8.3             +1  540     UART1FCN1_RFRQ   BIT UART1FCN1.3 ; Receive FIFO Request     
 00D8.4             +1  541     UART1FCN1_TIE    BIT UART1FCN1.4 ; Transmit Interrupt Enable
 00D8.5             +1  542     UART1FCN1_TXHOLD BIT UART1FCN1.5 ; Transmit Hold            
 00D8.6             +1  543     UART1FCN1_TXNF   BIT UART1FCN1.6 ; TX FIFO Not Full         
 00D8.7             +1  544     UART1FCN1_TFRQ   BIT UART1FCN1.7 ; Transmit FIFO Request    
                    +1  545     
                    +1  546     ;------------------------------------------------------------------------------
                    +1  547     ; Interrupt Definitions
                    +1  548     ;------------------------------------------------------------------------------
 0000               +1  549     INT0_IRQn    EQU 0  ; External Interrupt 0      
 0001               +1  550     TIMER0_IRQn  EQU 1  ; Timer 0 Overflow          
 0002               +1  551     INT1_IRQn    EQU 2  ; External Interrupt 1      
 0003               +1  552     TIMER1_IRQn  EQU 3  ; Timer 1 Overflow          
 0004               +1  553     UART0_IRQn   EQU 4  ; UART0                     
 0005               +1  554     TIMER2_IRQn  EQU 5  ; Timer 2 Overflow / Capture
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE    10

 0006               +1  555     SPI0_IRQn    EQU 6  ; SPI0                      
 0007               +1  556     SMBUS0_IRQn  EQU 7  ; SMBus 0                   
 0008               +1  557     PMATCH_IRQn  EQU 8  ; Port Match                
 0009               +1  558     ADC0WC_IRQn  EQU 9  ; ADC0 Window Compare       
 000A               +1  559     ADC0EOC_IRQn EQU 10 ; ADC0 End of Conversion    
 000B               +1  560     PCA0_IRQn    EQU 11 ; PCA0                      
 000C               +1  561     CMP0_IRQn    EQU 12 ; Comparator 0              
 000D               +1  562     CMP1_IRQn    EQU 13 ; Comparator 1              
 000E               +1  563     TIMER3_IRQn  EQU 14 ; Timer 3 Overflow / Capture
 000F               +1  564     UART1_IRQn   EQU 15 ; UART1                     
 0010               +1  565     I2C0_IRQn    EQU 16 ; I2C0 Slave                
 0011               +1  566     TIMER4_IRQn  EQU 17 ; Timer 4 Overflow / Capture
 0012               +1  567     TIMER5_IRQn  EQU 18 ; Timer 5 Overflow / Capture
 0013               +1  568     CL0_IRQn     EQU 19 ; Configurable Logic        
                    +1  569     
                    +1  570     ;------------------------------------------------------------------------------
                    +1  571     ; SFR Page Definitions
                    +1  572     ;------------------------------------------------------------------------------
 0000               +1  573     LEGACY_PAGE  EQU 000H ; Legacy SFR Page
 0010               +1  574     PG2_PAGE     EQU 010H ; Page2          
 0020               +1  575     PG3_PAGE     EQU 020H ; Page3          
 0030               +1  576     PG4_PAGE     EQU 030H ; Page4          
                        577     
                        578     ; Ugrótábl létrehozása
000000                  579             CSEG AT 0
000000 8000       F     580             SJMP Main
                        581     
------                  582     myprog SEGMENT CODE                     ;saját kódszegmens létrehozása
------                  583     RSEG myprog                             ;saját kódszegmens létrehozása
                        584     ; ------------------------------------------------------------
                        585     ; Fõprogram
                        586     ; ------------------------------------------------------------
                        587     ; Feladata: a szükséges inicializálás lépések elvégzése, bemenetek
                        588     ;                       megadása és a feladatot megvalóító szubrutin hívása
                        589     ; ------------------------------------------------------------
000000                  590     Main:
000000 C2AF             591             CLR IE_EA ; interruptok tiltása watchdog tiltás idejére
000002 7597DE           592             MOV WDTCN,#0DEh ; watchdog timer tiltása
000005 7597AD           593             MOV WDTCN,#0ADh
000008 D2AF             594             SETB IE_EA ; interruptok engedélyezése
                        595     
                        596             ; paraméterek elõkészítése a szubrutin híváshoz
00000A 7830             597             MOV R0, #0x30   ;operandus címe
00000C 7932             598             MOV R1, #0x32   ;kimenet címe
00000E 7A04             599             MOV R2, #0x04   ;10 hatványa
                        600     
000010 76F6             601             MOV @R0, #0xF6  ;operandus LSB értéke
000012 08               602             INC R0                  ;következõ címen az MSB
000013 76FF             603             MOV @R0, #0xFF  ;operandus MSB értéke
000015 18               604             DEC R0                  ;visszaállítjuk LSB-re
000016 7F00             605             MOV R7, #0              ;PSW-t orolja, mutatja, hogy volt-e overflow
000018 120000     F     606             CALL QuickMultiply ;gyorsszoró szubrutin hívása
00001B 80FE             607             JMP $ ; végtelen ciklusban várunk
                        608     
                        609     
                        610     
                        611     ; -----------------------------------------------------------
                        612     ; QuickMultiply szubrutin
                        613     ; -----------------------------------------------------------
                        614     ; Funkció:              16 bites szám gyorsszorzása 10 hatványával
                        615     ; Bementek:             R0 - operandus címe
                        616     ;                               R1 - kimenet, eredmény címe
                        617     ;                               R2 - 10 kitevõje 0...4
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE    11

                        618     ; Kimenetek:    R2 - kimenet, eredmény címe
                        619     ; Regisztereket módosítja:
                        620     ;                               A, R3, R4, R5, R6, R7, PSW
                        621     ; -----------------------------------------------------------
00001D                  622     QuickMultiply:
                        623             ;kimenet nullázása, hozzá fogjuk adogatni a részereményeket
00001D 7700             624             MOV @R1, #0x00  ;kimeneti LSB nullázása
00001F 09               625             INC R1                  ;következõ byte
000020 7700             626             MOV @R1, #0x00  ;kimeneti MSB nullázása
000022 19               627             DEC R1                  ;eredeti címre visszaállítás
                        628     
                        629             ;operandus értékének betöltése memóriából és kettes komplementelés
000023 E6               630             MOV A, @R0      ;operandus LSB-jét betöltjü
000024 FB               631             MOV R3, A
000025 08               632             INC R0          ;operandus MSB-jére állítjuk a pointerünket
000026 E6               633             MOV A, @R0      ;operandus MSB-jét betöltjük
000027 FC               634             MOV R4, A
000028 18               635             DEC R0          ;visszaállítjuk a pointert az LSB-re
                        636             ;megnézzük, hogy az operandus negatív szám-e
000029 EC               637             MOV A, R4       ;operandus MSB betöltjük
00002A 5480             638             ANL A, #0x80;maszkolunk, hogy csak a legnagyobb bit lehessen nem 0
00002C 6003             639             JZ Switch       ;ugrunk, ha a legnagyobb bit 0, azaz pozitív szám
00002E 120000     F     640             CALL Complement2        ;a legnagyobb bit 1-es, kettes komplemenseljük
                        641     
000031                  642     Switch:
000031 BA042A           643             CJNE R2, #0x04, NotFour ;ugrik, ha R2 értéke nem 4
                        644             ;R2 értéke 4
                        645             ;10000 = 16 + 256 + 512 + 1024 + 8192
                        646             ;szorzás 16al
000034 7E04             647             MOV R6, #0x04
000036 120000     F     648             CALL ShiftLeftR6Times
000039 120000     F     649             CALL Add2Mem    ;eredmény hozzáadása
                        650     
                        651             ;szorzás 256al
00003C 7E04             652             MOV R6, #0x04
00003E 120000     F     653             CALL ShiftLeftR6Times
000041 120000     F     654             CALL Add2Mem    ;eredmény hozzáadása
                        655     
                        656             ;szorzás 512vel
000044 7E01             657             MOV R6, #0x01
000046 120000     F     658             CALL ShiftLeftR6Times
000049 120000     F     659             CALL Add2Mem    ;eredmény hozzáadása
                        660     
                        661             ;szorzás 1024el
00004C 7E01             662             MOV R6, #0x01
00004E 120000     F     663             CALL ShiftLeftR6Times
000051 120000     F     664             CALL Add2Mem    ;eredmény hozzáadása
                        665     
                        666             ;szorzás 8192vel
000054 7E03             667             MOV R6, #0x03
000056 120000     F     668             CALL ShiftLeftR6Times
000059 120000     F     669             CALL Add2Mem    ;eredmény hozzáadása
00005C 806A             670             JMP CheckIfNeg
00005E                  671     NotFour:
00005E BA0332           672             CJNE R2, #0x03, NotThree;ugrik, ha R2 értéke nem 3
                        673             ;R2 értéke 3
                        674             ;1000 = 8 + 32 + 64 + 128 + 256 + 512
                        675             ;szorzás 8al
000061 7E03             676             MOV R6, #0x03
000063 120000     F     677             CALL ShiftLeftR6Times
000066 120000     F     678             CALL Add2Mem    ;eredmény hozzáadása
                        679     
                        680             ;szorzás 32vel
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE    12

000069 7E02             681             MOV R6, #0x02
00006B 120000     F     682             CALL ShiftLeftR6Times
00006E 120000     F     683             CALL Add2Mem    ;eredmény hozzáadása
                        684     
                        685             ;szorzás 64-el
000071 7E01             686             MOV R6, #0x01
000073 120000     F     687             CALL ShiftLeftR6Times
000076 120000     F     688             CALL Add2Mem    ;eredmény hozzáadása
                        689     
                        690             ;szorzás 128al
000079 7E01             691             MOV R6, #0x01
00007B 120000     F     692             CALL ShiftLeftR6Times
00007E 120000     F     693             CALL Add2Mem    ;eredmény hozzáadása
                        694     
                        695             ;szorzás 256al
000081 7E01             696             MOV R6, #0x01
000083 120000     F     697             CALL ShiftLeftR6Times
000086 120000     F     698             CALL Add2Mem    ;eredmény hozzáadása
                        699     
                        700             ;szorzás 512vel
000089 7E01             701             MOV R6, #0x01
00008B 120000     F     702             CALL ShiftLeftR6Times
00008E 120000     F     703             CALL Add2Mem    ;eredmény hozzáadása
                        704     
000091 8035             705             JMP CheckIfNeg
000093                  706     NotThree:
000093 BA021A           707             CJNE R2, #0x02, NotTwo  ;ugrik, ha R2 értéke nem 2
                        708             ;R2 értéke 2
                        709             ;100 = 4 + 32 + 64
                        710             ;szorzás 4el
000096 7E02             711             MOV R6, #0x02
000098 120000     F     712             CALL ShiftLeftR6Times
00009B 120000     F     713             CALL Add2Mem    ;eredmény hozzáadása
                        714     
                        715             ;szorzás 32vel
00009E 7E03             716             MOV R6, #0x03
0000A0 120000     F     717             CALL ShiftLeftR6Times
0000A3 120000     F     718             CALL Add2Mem    ;eredmény hozzáadása
                        719     
                        720             ;szorzás 64vel
0000A6 7E01             721             MOV R6, #0x01
0000A8 120000     F     722             CALL ShiftLeftR6Times
0000AB 120000     F     723             CALL Add2Mem    ;eredmény hozzáadása
                        724     
0000AE 8018             725             JMP CheckIfNeg
0000B0                  726     NotTwo:
0000B0 BA0112           727             CJNE R2, #0x01, IsZero  ;ugrik, ha R2 értéke nem 1
                        728             ;R2 értéke 1
                        729             ;10 = 2 + 8
                        730             ;szorzás 2vel
0000B3 7E01             731             MOV R6, #0x01
0000B5 120000     F     732             CALL ShiftLeftR6Times
0000B8 120000     F     733             CALL Add2Mem    ;eredmény hozzáadása
                        734             ;szorzás 8al
0000BB 7E02             735             MOV R6, #0x02
0000BD 120000     F     736             CALL ShiftLeftR6Times
0000C0 120000     F     737             CALL Add2Mem;   ;eredmény hozzáadása
                        738     
0000C3 8003             739             JMP CheckIfNeg
0000C5                  740     IsZero:;R2 értéke 0
0000C5 120000     F     741             CALL Add2Mem
                        742     
0000C8                  743     CheckIfNeg:
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE    13

                        744             ;megnézzük, hogy az operandus negatív szám volt-e
0000C8 08               745             INC R0          ;MSB-re állítjuk a pointert
0000C9 E6               746             MOV A, @R0      ;operandus MSB betöltjük
0000CA 18               747             DEC R0          ;LSB-re visszállítjuk a pointert
0000CB 5480             748             ANL A, #0x80;maszkolunk, hogy csak a legnagyobb bit lehessen nem 0
0000CD 6012             749             JZ OvCheck      ;ugrunk, ha a legnagyobb bit 0, azaz pozitív szám
                        750             ;az elmentett eredményt kettes komplemenselni kell
                        751             ;betöltjük az eredményt R3(LSB) és R4(MSB) regiszterekbe
0000CF E7               752             MOV A, @R1      ;eredmény LSB-jét betöltjük
0000D0 FB               753             MOV R3, A
0000D1 09               754             INC R1          ;eredmény MSB-jére állítjuk a pointerünket
0000D2 E7               755             MOV A, @R1      ;eredmény MSB-jét betöltjük
0000D3 FC               756             MOV R4, A
0000D4 19               757             DEC R1          ;visszaállítjuk a pointert az LSB-re
0000D5 120000     F     758             CALL Complement2        ;a legnagyobb bit 1-es, kettes komplemenseljük
                        759             ;lenullázzuk a memóriában lévõ eredményt
0000D8 7700             760             MOV @R1, #0x00  ;kimeneti LSB nullázása
0000DA 09               761             INC R1                  ;következõ byte
0000DB 7700             762             MOV @R1, #0x00  ;kimeneti MSB nullázása
0000DD 19               763             DEC R1                  ;eredeti címre visszaállítás
0000DE 120000     F     764             CALL Add2Mem    ;memóriába betültjük a kettes komplemenselt eredményt
                        765     
                        766     
                        767     
                        768     
0000E1                  769     OvCheck:
                        770             ;megnézzük, történt-e túlcsordulás
0000E1 08               771             INC R0  ;MSB-re állítjuk a pointert
0000E2 09               772             INC R1  ;MSB-re állítjuk a pointert
                        773             ;ha változott a 15. bit akkor volt túlcsordulás
0000E3 E6               774             MOV     A, @R0  ;operandus MSB betoltése
0000E4 67               775             XRL A, @R1      ;eredmény MSB-t xor-oljuk az operandus MSB-vel
0000E5 5480             776             ANL A, #0x80;maszkolunk, hogy csak a legnagyobb bit lehessen nem 0
0000E7 7006             777             JNZ Overflow;ha az elsõ bit egyes, azaz változás történt, akkor overflow van
                        778             ;ha van carry az R7ben akkor overflow
0000E9 EF               779             MOV A, R7       ;mindenkori PSW betöltjük
0000EA 5480             780             ANL A, #0x80;maszkolunk, hogy csak a legnagyobb bit lehessen nem 0
0000EC 7001             781             JNZ Overflow;ha az elsõ bit egyes, azaz változás történt, akkor overflow van
0000EE 22               782             RET
                        783     
0000EF                  784     OverFlow:
0000EF 75D004           785             MOV PSW, #0x04  ;beállítjuk a PSW-ben az overflow bitet
0000F2 22               786             RET
                        787     
                        788     
                        789     
                        790     
                        791     
                        792     
                        793     ; -----------------------------------------------------------
                        794     ; ShiftLeftR6Times szubrutin
                        795     ; -----------------------------------------------------------
                        796     ; Funkció:              R3 és R4 tartalmát balra shifteli 1-el,
                        797     ;                               R3 tartalma beleshiftelõdik R4-be, R6-ban
                        798     ;                               meghatározott értékszer
                        799     ; Bementek:             R3 - LSB
                        800     ;                               R4 - MSB
                        801     ;                               R6 - ennyiszer kell balra shiftelni
                        802     ; Kimenetek:    R3 - LSB
                        803     ;                               R4 - MSB
                        804     ; Regisztereket módosítja:
                        805     ;                               R3, R4, R6
                        806     ; -----------------------------------------------------------
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE    14

0000F3                  807     ShiftLeftR6Times:
0000F3 C3               808             CLR C           ;CY törlése, hogy ne zavarjon be
0000F4 EB               809             MOV A,R3        ;LSB betöltése
0000F5 33               810             RLC A           ;LSB balra forgatása, végére 0 kerül
0000F6 FB               811             MOV R3,A        ;elforgatott LSB kimentése
0000F7 EC               812             MOV A,R4        ;MSB betöltése
0000F8 33               813             RLC A           ;MSB balra forgatása, végére LSB legnagyobb bitje kerül
0000F9 FC               814             MOV R4,A        ;elforgatott MSB kimentése
0000FA 120000     F     815             CALL SaveOV
0000FD DEF4             816             DJNZ R6, ShiftLeftR6Times;csökkenti R6 értékét és shiftel, ha nem nulla
0000FF 22               817             RET
                        818     
                        819     
                        820     
                        821     
                        822     
                        823     ; -----------------------------------------------------------
                        824     ; Add2Mem szubrutin
                        825     ; -----------------------------------------------------------
                        826     ; Funkció:              R1 által mutatott címen lévõ 16 bites értékhez
                        827     ;                               hozzáadja R3(LSB) és R4(MSB) értékét
                        828     ; Bementek:             R1 - mutató
                        829     ;                               R3 - LSB
                        830     ;                               R4 - MSB
                        831     ; Kimenetek:    R1 - mutatón lévõ érték
                        832     ; Regisztereket módosítja:
                        833     ;
                        834     ; -----------------------------------------------------------
000100                  835     Add2Mem:
000100 C3               836             CLR C           ;CY törlése, hogy ne zavarjon be
000101 EB               837             MOV A,R3        ;LSB betöltése
000102 27               838             ADD A,@R1       ;memória LSB-jéhez R3 LSB hozzáadása
000103 F7               839             MOV @R1,A       ;az összeget eltárolja a memóriában lévõ LSB-n
000104 09               840             INC R1          ;memória MSB-re állítjuk a pointert
000105 EC               841             MOV A,R4        ;MSB betöltése
000106 37               842             ADDC A,@R1      ;memória MSB-jéhez R4 MSB hozzáadása
000107 F7               843             MOV @R1,A       ;az összeget eltárolja a memóriában lévõ MSB-n
000108 19               844             DEC R1          ;visszaállítjuk a pointert a memória LSB-re
000109 22               845             RET
                        846     
                        847     
                        848     
                        849     ; -----------------------------------------------------------
                        850     ; SaveOV szubrutin
                        851     ; -----------------------------------------------------------
                        852     ; Funkció:              R7-be elmenti a PSW aktuális állapotát úgy,
                        853     ;                               hogy minden korábbi változata is jelen van
                        854     ;                               olyan formában, hogy az 1-eseket megõrzi
                        855     ; Bementek:             R7 - PSW tároló regiszter
                        856     ; Kimenetek:    R7 - PWS tároló regiszter
                        857     ; Regisztereket módosítja:
                        858     ;                               R7
                        859     ; -----------------------------------------------------------
00010A                  860     SaveOV:
00010A E5D0             861             MOV A, PSW      ;PSW betöltése
00010C 4F               862             ORL A, R7       ;PSW-hez hozzá vagyolja R7-et, mindkettõ 1-esei A-ban
00010D FF               863             MOV R7, A       ;(PSW OR R7) kimentése R7-be
00010E 22               864             RET
                        865     
                        866     
                        867     
                        868     ; -----------------------------------------------------------
                        869     ; Complement2 szubrutin
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE    15

                        870     ; -----------------------------------------------------------
                        871     ; Funkció:              R3(LSB) és R4(MSB) 16 bites számot kettes
                        872     ;                               komplemenseli
                        873     ; Bementek:             R3 - LSB
                        874     ;                               R4 - MSB
                        875     ; Kimenetek:    R3 - LSB
                        876     ;                               R4 - MSB
                        877     ; Regisztereket módosítja:
                        878     ;                               R3, R4
                        879     ; -----------------------------------------------------------
00010F                  880     Complement2:
00010F C3               881             CLR C           ;töröljük a CY-t, nehogy bezavarjon
000110 EB               882             MOV A, R3       ;operandus LSB-jét betöltjük
000111 F4               883             CPL A           ;operandus LSB-jét komplementáljuk
000112 2401             884             ADD A, #0x01;operandus LSB-jéhez hozzáadunk 1-et
000114 FB               885             MOV R3, A       ;R3 operandus LSB értéke
000115 EC               886             MOV A, R4       ;operandus MSB-jét betöltjük
000116 F4               887             CPL A           ;operandus MSB-jét komplementáljuk
000117 3400             888             ADDC A,#0x00;operandus MSB-jéhez hozzáadjuk az LSB növelésébõl származó maradékot
000119 FC               889             MOV R4, A       ;R4 operandus MSB értéke
00011A 22               890             RET
                        891     
                        892     
                        893     
                        894     END
                        895     
                        896     
                        897     
                        898     
                        899     
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE    16

SYMBOL TABLE LISTING
------ ----- -------


N A M E                     T Y P E  V A L U E     ATTRIBUTES

ACC. . . . . . . . . . . .  D  ADDR  00E0H     A   
ACC_ACC0 . . . . . . . . .  B  ADDR  00E0H.0   A   
ACC_ACC1 . . . . . . . . .  B  ADDR  00E0H.1   A   
ACC_ACC2 . . . . . . . . .  B  ADDR  00E0H.2   A   
ACC_ACC3 . . . . . . . . .  B  ADDR  00E0H.3   A   
ACC_ACC4 . . . . . . . . .  B  ADDR  00E0H.4   A   
ACC_ACC5 . . . . . . . . .  B  ADDR  00E0H.5   A   
ACC_ACC6 . . . . . . . . .  B  ADDR  00E0H.6   A   
ACC_ACC7 . . . . . . . . .  B  ADDR  00E0H.7   A   
ADC0 . . . . . . . . . . .  D  ADDR  00BDH     A   
ADC0ASA. . . . . . . . . .  D  ADDR  00B5H     A   
ADC0ASAH . . . . . . . . .  D  ADDR  00B6H     A   
ADC0ASAL . . . . . . . . .  D  ADDR  00B5H     A   
ADC0ASCF . . . . . . . . .  D  ADDR  00A1H     A   
ADC0ASCT . . . . . . . . .  D  ADDR  00C7H     A   
ADC0CF0. . . . . . . . . .  D  ADDR  00BCH     A   
ADC0CF1. . . . . . . . . .  D  ADDR  00B9H     A   
ADC0CF2. . . . . . . . . .  D  ADDR  00DFH     A   
ADC0CN0. . . . . . . . . .  D  ADDR  00E8H     A   
ADC0CN0_ADBUSY . . . . . .  B  ADDR  00E8H.4   A   
ADC0CN0_ADEN . . . . . . .  B  ADDR  00E8H.7   A   
ADC0CN0_ADGN0. . . . . . .  B  ADDR  00E8H.1   A   
ADC0CN0_ADGN1. . . . . . .  B  ADDR  00E8H.2   A   
ADC0CN0_ADINT. . . . . . .  B  ADDR  00E8H.5   A   
ADC0CN0_ADWINT . . . . . .  B  ADDR  00E8H.3   A   
ADC0CN0_IPOEN. . . . . . .  B  ADDR  00E8H.6   A   
ADC0CN0_TEMPE. . . . . . .  B  ADDR  00E8H.0   A   
ADC0CN1. . . . . . . . . .  D  ADDR  00B2H     A   
ADC0CN2. . . . . . . . . .  D  ADDR  00B3H     A   
ADC0EOC_IRQN . . . . . . .  N  NUMB  000AH     A   
ADC0GT . . . . . . . . . .  D  ADDR  00C3H     A   
ADC0GTH. . . . . . . . . .  D  ADDR  00C4H     A   
ADC0GTL. . . . . . . . . .  D  ADDR  00C3H     A   
ADC0H. . . . . . . . . . .  D  ADDR  00BEH     A   
ADC0L. . . . . . . . . . .  D  ADDR  00BDH     A   
ADC0LT . . . . . . . . . .  D  ADDR  00C5H     A   
ADC0LTH. . . . . . . . . .  D  ADDR  00C6H     A   
ADC0LTL. . . . . . . . . .  D  ADDR  00C5H     A   
ADC0MX . . . . . . . . . .  D  ADDR  00BBH     A   
ADC0WC_IRQN. . . . . . . .  N  NUMB  0009H     A   
ADD2MEM. . . . . . . . . .  C  ADDR  0100H     R   SEG=MYPROG
B. . . . . . . . . . . . .  D  ADDR  00F0H     A   
B_B0 . . . . . . . . . . .  B  ADDR  00F0H.0   A   
B_B1 . . . . . . . . . . .  B  ADDR  00F0H.1   A   
B_B2 . . . . . . . . . . .  B  ADDR  00F0H.2   A   
B_B3 . . . . . . . . . . .  B  ADDR  00F0H.3   A   
B_B4 . . . . . . . . . . .  B  ADDR  00F0H.4   A   
B_B5 . . . . . . . . . . .  B  ADDR  00F0H.5   A   
B_B6 . . . . . . . . . . .  B  ADDR  00F0H.6   A   
B_B7 . . . . . . . . . . .  B  ADDR  00F0H.7   A   
CHECKIFNEG . . . . . . . .  C  ADDR  00C8H     R   SEG=MYPROG
CKCON0 . . . . . . . . . .  D  ADDR  008EH     A   
CKCON1 . . . . . . . . . .  D  ADDR  00A6H     A   
CL0_IRQN . . . . . . . . .  N  NUMB  0013H     A   
CLEN0. . . . . . . . . . .  D  ADDR  00C6H     A   
CLIE0. . . . . . . . . . .  D  ADDR  00C7H     A   
CLIF0. . . . . . . . . . .  D  ADDR  00E8H     A   
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE    17

CLIF0_C0FIF. . . . . . . .  B  ADDR  00E8H.0   A   
CLIF0_C0RIF. . . . . . . .  B  ADDR  00E8H.1   A   
CLIF0_C1FIF. . . . . . . .  B  ADDR  00E8H.2   A   
CLIF0_C1RIF. . . . . . . .  B  ADDR  00E8H.3   A   
CLIF0_C2FIF. . . . . . . .  B  ADDR  00E8H.4   A   
CLIF0_C2RIF. . . . . . . .  B  ADDR  00E8H.5   A   
CLIF0_C3FIF. . . . . . . .  B  ADDR  00E8H.6   A   
CLIF0_C3RIF. . . . . . . .  B  ADDR  00E8H.7   A   
CLKSEL . . . . . . . . . .  D  ADDR  00A9H     A   
CLOUT0 . . . . . . . . . .  D  ADDR  00D1H     A   
CLU0CF . . . . . . . . . .  D  ADDR  00B1H     A   
CLU0FN . . . . . . . . . .  D  ADDR  00AFH     A   
CLU0MX . . . . . . . . . .  D  ADDR  0084H     A   
CLU1CF . . . . . . . . . .  D  ADDR  00B3H     A   
CLU1FN . . . . . . . . . .  D  ADDR  00B2H     A   
CLU1MX . . . . . . . . . .  D  ADDR  0085H     A   
CLU2CF . . . . . . . . . .  D  ADDR  00B6H     A   
CLU2FN . . . . . . . . . .  D  ADDR  00B5H     A   
CLU2MX . . . . . . . . . .  D  ADDR  0091H     A   
CLU3CF . . . . . . . . . .  D  ADDR  00BFH     A   
CLU3FN . . . . . . . . . .  D  ADDR  00BEH     A   
CLU3MX . . . . . . . . . .  D  ADDR  00AEH     A   
CMP0_IRQN. . . . . . . . .  N  NUMB  000CH     A   
CMP0CN0. . . . . . . . . .  D  ADDR  009BH     A   
CMP0CN1. . . . . . . . . .  D  ADDR  0099H     A   
CMP0MD . . . . . . . . . .  D  ADDR  009DH     A   
CMP0MX . . . . . . . . . .  D  ADDR  009FH     A   
CMP1_IRQN. . . . . . . . .  N  NUMB  000DH     A   
CMP1CN0. . . . . . . . . .  D  ADDR  00BFH     A   
CMP1CN1. . . . . . . . . .  D  ADDR  00ACH     A   
CMP1MD . . . . . . . . . .  D  ADDR  00ABH     A   
CMP1MX . . . . . . . . . .  D  ADDR  00AAH     A   
COMPLEMENT2. . . . . . . .  C  ADDR  010FH     R   SEG=MYPROG
CRC0CN0. . . . . . . . . .  D  ADDR  00CEH     A   
CRC0CN1. . . . . . . . . .  D  ADDR  0086H     A   
CRC0CNT. . . . . . . . . .  D  ADDR  00D3H     A   
CRC0DAT. . . . . . . . . .  D  ADDR  00CBH     A   
CRC0FLIP . . . . . . . . .  D  ADDR  00CFH     A   
CRC0IN . . . . . . . . . .  D  ADDR  00CAH     A   
CRC0ST . . . . . . . . . .  D  ADDR  00D2H     A   
DAC0CF0. . . . . . . . . .  D  ADDR  0091H     A   
DAC0CF1. . . . . . . . . .  D  ADDR  0092H     A   
DAC0H. . . . . . . . . . .  D  ADDR  0085H     A   
DAC0L. . . . . . . . . . .  D  ADDR  0084H     A   
DAC1CF0. . . . . . . . . .  D  ADDR  0093H     A   
DAC1CF1. . . . . . . . . .  D  ADDR  0094H     A   
DAC1H. . . . . . . . . . .  D  ADDR  008AH     A   
DAC1L. . . . . . . . . . .  D  ADDR  0089H     A   
DAC2CF0. . . . . . . . . .  D  ADDR  0095H     A   
DAC2CF1. . . . . . . . . .  D  ADDR  0096H     A   
DAC2H. . . . . . . . . . .  D  ADDR  008CH     A   
DAC2L. . . . . . . . . . .  D  ADDR  008BH     A   
DAC3CF0. . . . . . . . . .  D  ADDR  009AH     A   
DAC3CF1. . . . . . . . . .  D  ADDR  009CH     A   
DAC3H. . . . . . . . . . .  D  ADDR  008EH     A   
DAC3L. . . . . . . . . . .  D  ADDR  008DH     A   
DACGCF0. . . . . . . . . .  D  ADDR  0088H     A   
DACGCF0_D01REFSL . . . . .  B  ADDR  0088H.3   A   
DACGCF0_D1AMEN . . . . . .  B  ADDR  0088H.2   A   
DACGCF0_D1SRC0 . . . . . .  B  ADDR  0088H.0   A   
DACGCF0_D1SRC1 . . . . . .  B  ADDR  0088H.1   A   
DACGCF0_D23REFSL . . . . .  B  ADDR  0088H.7   A   
DACGCF0_D3AMEN . . . . . .  B  ADDR  0088H.6   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE    18

DACGCF0_D3SRC0 . . . . . .  B  ADDR  0088H.4   A   
DACGCF0_D3SRC1 . . . . . .  B  ADDR  0088H.5   A   
DACGCF1. . . . . . . . . .  D  ADDR  0098H     A   
DACGCF1_D0UDIS . . . . . .  B  ADDR  0098H.0   A   
DACGCF1_D1UDIS . . . . . .  B  ADDR  0098H.1   A   
DACGCF1_D2UDIS . . . . . .  B  ADDR  0098H.2   A   
DACGCF1_D3UDIS . . . . . .  B  ADDR  0098H.3   A   
DACGCF2. . . . . . . . . .  D  ADDR  00A2H     A   
DERIVID. . . . . . . . . .  D  ADDR  00ADH     A   
DEVICEID . . . . . . . . .  D  ADDR  00B5H     A   
DP . . . . . . . . . . . .  D  ADDR  0082H     A   
DPH. . . . . . . . . . . .  D  ADDR  0083H     A   
DPL. . . . . . . . . . . .  D  ADDR  0082H     A   
EIE1 . . . . . . . . . . .  D  ADDR  00E6H     A   
EIE2 . . . . . . . . . . .  D  ADDR  00F3H     A   
EIP1 . . . . . . . . . . .  D  ADDR  00BBH     A   
EIP1H. . . . . . . . . . .  D  ADDR  00EEH     A   
EIP2 . . . . . . . . . . .  D  ADDR  00EDH     A   
EIP2H. . . . . . . . . . .  D  ADDR  00F6H     A   
EMI0CN . . . . . . . . . .  D  ADDR  00E7H     A   
FLKEY. . . . . . . . . . .  D  ADDR  00B7H     A   
HFO0CAL. . . . . . . . . .  D  ADDR  00C7H     A   
HFO1CAL. . . . . . . . . .  D  ADDR  00D6H     A   
HFOCN. . . . . . . . . . .  D  ADDR  00EFH     A   
I2C0_IRQN. . . . . . . . .  N  NUMB  0010H     A   
I2C0ADM. . . . . . . . . .  D  ADDR  00FFH     A   
I2C0CN0. . . . . . . . . .  D  ADDR  00BAH     A   
I2C0DIN. . . . . . . . . .  D  ADDR  00BCH     A   
I2C0DOUT . . . . . . . . .  D  ADDR  00BBH     A   
I2C0FCN0 . . . . . . . . .  D  ADDR  00ADH     A   
I2C0FCN1 . . . . . . . . .  D  ADDR  00ABH     A   
I2C0FCT. . . . . . . . . .  D  ADDR  00F5H     A   
I2C0SLAD . . . . . . . . .  D  ADDR  00BDH     A   
I2C0STAT . . . . . . . . .  D  ADDR  00B9H     A   
IE . . . . . . . . . . . .  D  ADDR  00A8H     A   
IE_EA. . . . . . . . . . .  B  ADDR  00A8H.7   A   
IE_ES0 . . . . . . . . . .  B  ADDR  00A8H.4   A   
IE_ESPI0 . . . . . . . . .  B  ADDR  00A8H.6   A   
IE_ET0 . . . . . . . . . .  B  ADDR  00A8H.1   A   
IE_ET1 . . . . . . . . . .  B  ADDR  00A8H.3   A   
IE_ET2 . . . . . . . . . .  B  ADDR  00A8H.5   A   
IE_EX0 . . . . . . . . . .  B  ADDR  00A8H.0   A   
IE_EX1 . . . . . . . . . .  B  ADDR  00A8H.2   A   
INT0_IRQN. . . . . . . . .  N  NUMB  0000H     A   
INT1_IRQN. . . . . . . . .  N  NUMB  0002H     A   
IP . . . . . . . . . . . .  D  ADDR  00B8H     A   
IP_PS0 . . . . . . . . . .  B  ADDR  00B8H.4   A   
IP_PSPI0 . . . . . . . . .  B  ADDR  00B8H.6   A   
IP_PT0 . . . . . . . . . .  B  ADDR  00B8H.1   A   
IP_PT1 . . . . . . . . . .  B  ADDR  00B8H.3   A   
IP_PT2 . . . . . . . . . .  B  ADDR  00B8H.5   A   
IP_PX0 . . . . . . . . . .  B  ADDR  00B8H.0   A   
IP_PX1 . . . . . . . . . .  B  ADDR  00B8H.2   A   
IPH. . . . . . . . . . . .  D  ADDR  00F2H     A   
ISZERO . . . . . . . . . .  C  ADDR  00C5H     R   SEG=MYPROG
IT01CF . . . . . . . . . .  D  ADDR  00E4H     A   
LEGACY_PAGE. . . . . . . .  N  NUMB  0000H     A   
LFO0CN . . . . . . . . . .  D  ADDR  00B1H     A   
MAIN . . . . . . . . . . .  C  ADDR  0000H     R   SEG=MYPROG
MYPROG . . . . . . . . . .  C  SEG   00011BH       REL=UNIT, ALN=BYTE
NOTFOUR. . . . . . . . . .  C  ADDR  005EH     R   SEG=MYPROG
NOTTHREE . . . . . . . . .  C  ADDR  0093H     R   SEG=MYPROG
NOTTWO . . . . . . . . . .  C  ADDR  00B0H     R   SEG=MYPROG
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE    19

OVCHECK. . . . . . . . . .  C  ADDR  00E1H     R   SEG=MYPROG
OVERFLOW . . . . . . . . .  C  ADDR  00EFH     R   SEG=MYPROG
P0 . . . . . . . . . . . .  D  ADDR  0080H     A   
P0_B0. . . . . . . . . . .  B  ADDR  0080H.0   A   
P0_B1. . . . . . . . . . .  B  ADDR  0080H.1   A   
P0_B2. . . . . . . . . . .  B  ADDR  0080H.2   A   
P0_B3. . . . . . . . . . .  B  ADDR  0080H.3   A   
P0_B4. . . . . . . . . . .  B  ADDR  0080H.4   A   
P0_B5. . . . . . . . . . .  B  ADDR  0080H.5   A   
P0_B6. . . . . . . . . . .  B  ADDR  0080H.6   A   
P0_B7. . . . . . . . . . .  B  ADDR  0080H.7   A   
P0MASK . . . . . . . . . .  D  ADDR  00FEH     A   
P0MAT. . . . . . . . . . .  D  ADDR  00FDH     A   
P0MDIN . . . . . . . . . .  D  ADDR  00F1H     A   
P0MDOUT. . . . . . . . . .  D  ADDR  00A4H     A   
P0SKIP . . . . . . . . . .  D  ADDR  00D4H     A   
P1 . . . . . . . . . . . .  D  ADDR  0090H     A   
P1_B0. . . . . . . . . . .  B  ADDR  0090H.0   A   
P1_B1. . . . . . . . . . .  B  ADDR  0090H.1   A   
P1_B2. . . . . . . . . . .  B  ADDR  0090H.2   A   
P1_B3. . . . . . . . . . .  B  ADDR  0090H.3   A   
P1_B4. . . . . . . . . . .  B  ADDR  0090H.4   A   
P1_B5. . . . . . . . . . .  B  ADDR  0090H.5   A   
P1_B6. . . . . . . . . . .  B  ADDR  0090H.6   A   
P1_B7. . . . . . . . . . .  B  ADDR  0090H.7   A   
P1MASK . . . . . . . . . .  D  ADDR  00EEH     A   
P1MAT. . . . . . . . . . .  D  ADDR  00EDH     A   
P1MDIN . . . . . . . . . .  D  ADDR  00F2H     A   
P1MDOUT. . . . . . . . . .  D  ADDR  00A5H     A   
P1SKIP . . . . . . . . . .  D  ADDR  00D5H     A   
P2 . . . . . . . . . . . .  D  ADDR  00A0H     A   
P2_B0. . . . . . . . . . .  B  ADDR  00A0H.0   A   
P2_B1. . . . . . . . . . .  B  ADDR  00A0H.1   A   
P2_B2. . . . . . . . . . .  B  ADDR  00A0H.2   A   
P2_B3. . . . . . . . . . .  B  ADDR  00A0H.3   A   
P2_B4. . . . . . . . . . .  B  ADDR  00A0H.4   A   
P2_B5. . . . . . . . . . .  B  ADDR  00A0H.5   A   
P2_B6. . . . . . . . . . .  B  ADDR  00A0H.6   A   
P2MASK . . . . . . . . . .  D  ADDR  00FCH     A   
P2MAT. . . . . . . . . . .  D  ADDR  00FBH     A   
P2MDIN . . . . . . . . . .  D  ADDR  00F3H     A   
P2MDOUT. . . . . . . . . .  D  ADDR  00A6H     A   
P2SKIP . . . . . . . . . .  D  ADDR  00CCH     A   
P3 . . . . . . . . . . . .  D  ADDR  00B0H     A   
P3_B0. . . . . . . . . . .  B  ADDR  00B0H.0   A   
P3_B1. . . . . . . . . . .  B  ADDR  00B0H.1   A   
P3_B2. . . . . . . . . . .  B  ADDR  00B0H.2   A   
P3_B3. . . . . . . . . . .  B  ADDR  00B0H.3   A   
P3_B4. . . . . . . . . . .  B  ADDR  00B0H.4   A   
P3_B7. . . . . . . . . . .  B  ADDR  00B0H.7   A   
P3MDIN . . . . . . . . . .  D  ADDR  00F4H     A   
P3MDOUT. . . . . . . . . .  D  ADDR  009CH     A   
PCA0 . . . . . . . . . . .  D  ADDR  00F9H     A   
PCA0_IRQN. . . . . . . . .  N  NUMB  000BH     A   
PCA0CENT . . . . . . . . .  D  ADDR  009EH     A   
PCA0CLR. . . . . . . . . .  D  ADDR  009CH     A   
PCA0CN0. . . . . . . . . .  D  ADDR  00D8H     A   
PCA0CN0_CCF0 . . . . . . .  B  ADDR  00D8H.0   A   
PCA0CN0_CCF1 . . . . . . .  B  ADDR  00D8H.1   A   
PCA0CN0_CCF2 . . . . . . .  B  ADDR  00D8H.2   A   
PCA0CN0_CCF3 . . . . . . .  B  ADDR  00D8H.3   A   
PCA0CN0_CCF4 . . . . . . .  B  ADDR  00D8H.4   A   
PCA0CN0_CCF5 . . . . . . .  B  ADDR  00D8H.5   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE    20

PCA0CN0_CF . . . . . . . .  B  ADDR  00D8H.7   A   
PCA0CN0_CR . . . . . . . .  B  ADDR  00D8H.6   A   
PCA0CP0. . . . . . . . . .  D  ADDR  00FBH     A   
PCA0CP1. . . . . . . . . .  D  ADDR  00E9H     A   
PCA0CP2. . . . . . . . . .  D  ADDR  00EBH     A   
PCA0CP3. . . . . . . . . .  D  ADDR  00F4H     A   
PCA0CP4. . . . . . . . . .  D  ADDR  0084H     A   
PCA0CP5. . . . . . . . . .  D  ADDR  00DDH     A   
PCA0CPH0 . . . . . . . . .  D  ADDR  00FCH     A   
PCA0CPH1 . . . . . . . . .  D  ADDR  00EAH     A   
PCA0CPH2 . . . . . . . . .  D  ADDR  00ECH     A   
PCA0CPH3 . . . . . . . . .  D  ADDR  00F5H     A   
PCA0CPH4 . . . . . . . . .  D  ADDR  0085H     A   
PCA0CPH5 . . . . . . . . .  D  ADDR  00DEH     A   
PCA0CPL0 . . . . . . . . .  D  ADDR  00FBH     A   
PCA0CPL1 . . . . . . . . .  D  ADDR  00E9H     A   
PCA0CPL2 . . . . . . . . .  D  ADDR  00EBH     A   
PCA0CPL3 . . . . . . . . .  D  ADDR  00F4H     A   
PCA0CPL4 . . . . . . . . .  D  ADDR  0084H     A   
PCA0CPL5 . . . . . . . . .  D  ADDR  00DDH     A   
PCA0CPM0 . . . . . . . . .  D  ADDR  00DAH     A   
PCA0CPM1 . . . . . . . . .  D  ADDR  00DBH     A   
PCA0CPM2 . . . . . . . . .  D  ADDR  00DCH     A   
PCA0CPM3 . . . . . . . . .  D  ADDR  00AEH     A   
PCA0CPM4 . . . . . . . . .  D  ADDR  00AFH     A   
PCA0CPM5 . . . . . . . . .  D  ADDR  00CCH     A   
PCA0H. . . . . . . . . . .  D  ADDR  00FAH     A   
PCA0L. . . . . . . . . . .  D  ADDR  00F9H     A   
PCA0MD . . . . . . . . . .  D  ADDR  00D9H     A   
PCA0POL. . . . . . . . . .  D  ADDR  0096H     A   
PCA0PWM. . . . . . . . . .  D  ADDR  00F7H     A   
PCON0. . . . . . . . . . .  D  ADDR  0087H     A   
PCON1. . . . . . . . . . .  D  ADDR  00CDH     A   
PFE0CN . . . . . . . . . .  D  ADDR  00C1H     A   
PG2_PAGE . . . . . . . . .  N  NUMB  0010H     A   
PG3_PAGE . . . . . . . . .  N  NUMB  0020H     A   
PG4_PAGE . . . . . . . . .  N  NUMB  0030H     A   
PMATCH_IRQN. . . . . . . .  N  NUMB  0008H     A   
PRTDRV . . . . . . . . . .  D  ADDR  00F6H     A   
PSCTL. . . . . . . . . . .  D  ADDR  008FH     A   
PSTAT0 . . . . . . . . . .  D  ADDR  00AAH     A   
PSW. . . . . . . . . . . .  D  ADDR  00D0H     A   
PSW_AC . . . . . . . . . .  B  ADDR  00D0H.6   A   
PSW_CY . . . . . . . . . .  B  ADDR  00D0H.7   A   
PSW_F0 . . . . . . . . . .  B  ADDR  00D0H.5   A   
PSW_F1 . . . . . . . . . .  B  ADDR  00D0H.1   A   
PSW_OV . . . . . . . . . .  B  ADDR  00D0H.2   A   
PSW_PARITY . . . . . . . .  B  ADDR  00D0H.0   A   
PSW_RS0. . . . . . . . . .  B  ADDR  00D0H.3   A   
PSW_RS1. . . . . . . . . .  B  ADDR  00D0H.4   A   
QUICKMULTIPLY. . . . . . .  C  ADDR  001DH     R   SEG=MYPROG
REF0CN . . . . . . . . . .  D  ADDR  00D1H     A   
REG0CN . . . . . . . . . .  D  ADDR  00C9H     A   
REVID. . . . . . . . . . .  D  ADDR  00B6H     A   
RSTSRC . . . . . . . . . .  D  ADDR  00EFH     A   
SAVEOV . . . . . . . . . .  C  ADDR  010AH     R   SEG=MYPROG
SBCON1 . . . . . . . . . .  D  ADDR  0094H     A   
SBRLH1 . . . . . . . . . .  D  ADDR  0096H     A   
SBRLL1 . . . . . . . . . .  D  ADDR  0095H     A   
SBUF0. . . . . . . . . . .  D  ADDR  0099H     A   
SBUF1. . . . . . . . . . .  D  ADDR  0092H     A   
SCON0. . . . . . . . . . .  D  ADDR  0098H     A   
SCON0_MCE. . . . . . . . .  B  ADDR  0098H.5   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE    21

SCON0_RB8. . . . . . . . .  B  ADDR  0098H.2   A   
SCON0_REN. . . . . . . . .  B  ADDR  0098H.4   A   
SCON0_RI . . . . . . . . .  B  ADDR  0098H.0   A   
SCON0_SMODE. . . . . . . .  B  ADDR  0098H.7   A   
SCON0_TB8. . . . . . . . .  B  ADDR  0098H.3   A   
SCON0_TI . . . . . . . . .  B  ADDR  0098H.1   A   
SCON1. . . . . . . . . . .  D  ADDR  00C8H     A   
SCON1_OVR. . . . . . . . .  B  ADDR  00C8H.7   A   
SCON1_PERR . . . . . . . .  B  ADDR  00C8H.6   A   
SCON1_RBX. . . . . . . . .  B  ADDR  00C8H.2   A   
SCON1_REN. . . . . . . . .  B  ADDR  00C8H.4   A   
SCON1_RI . . . . . . . . .  B  ADDR  00C8H.0   A   
SCON1_TBX. . . . . . . . .  B  ADDR  00C8H.3   A   
SCON1_TI . . . . . . . . .  B  ADDR  00C8H.1   A   
SFRPAGE. . . . . . . . . .  D  ADDR  00A7H     A   
SFRPGCN. . . . . . . . . .  D  ADDR  00BCH     A   
SFRSTACK . . . . . . . . .  D  ADDR  00D7H     A   
SHIFTLEFTR6TIMES . . . . .  C  ADDR  00F3H     R   SEG=MYPROG
SMB0ADM. . . . . . . . . .  D  ADDR  00D6H     A   
SMB0ADR. . . . . . . . . .  D  ADDR  00D7H     A   
SMB0CF . . . . . . . . . .  D  ADDR  00C1H     A   
SMB0CN0. . . . . . . . . .  D  ADDR  00C0H     A   
SMB0CN0_ACK. . . . . . . .  B  ADDR  00C0H.1   A   
SMB0CN0_ACKRQ. . . . . . .  B  ADDR  00C0H.3   A   
SMB0CN0_ARBLOST. . . . . .  B  ADDR  00C0H.2   A   
SMB0CN0_MASTER . . . . . .  B  ADDR  00C0H.7   A   
SMB0CN0_SI . . . . . . . .  B  ADDR  00C0H.0   A   
SMB0CN0_STA. . . . . . . .  B  ADDR  00C0H.5   A   
SMB0CN0_STO. . . . . . . .  B  ADDR  00C0H.4   A   
SMB0CN0_TXMODE . . . . . .  B  ADDR  00C0H.6   A   
SMB0DAT. . . . . . . . . .  D  ADDR  00C2H     A   
SMB0FCN0 . . . . . . . . .  D  ADDR  00C3H     A   
SMB0FCN1 . . . . . . . . .  D  ADDR  00C4H     A   
SMB0FCT. . . . . . . . . .  D  ADDR  00EFH     A   
SMB0RXLN . . . . . . . . .  D  ADDR  00C5H     A   
SMB0TC . . . . . . . . . .  D  ADDR  00ACH     A   
SMBUS0_IRQN. . . . . . . .  N  NUMB  0007H     A   
SMOD1. . . . . . . . . . .  D  ADDR  0093H     A   
SP . . . . . . . . . . . .  D  ADDR  0081H     A   
SPI0_IRQN. . . . . . . . .  N  NUMB  0006H     A   
SPI0CFG. . . . . . . . . .  D  ADDR  00A1H     A   
SPI0CKR. . . . . . . . . .  D  ADDR  00A2H     A   
SPI0CN0. . . . . . . . . .  D  ADDR  00F8H     A   
SPI0CN0_MODF . . . . . . .  B  ADDR  00F8H.5   A   
SPI0CN0_NSSMD0 . . . . . .  B  ADDR  00F8H.2   A   
SPI0CN0_NSSMD1 . . . . . .  B  ADDR  00F8H.3   A   
SPI0CN0_RXOVRN . . . . . .  B  ADDR  00F8H.4   A   
SPI0CN0_SPIEN. . . . . . .  B  ADDR  00F8H.0   A   
SPI0CN0_SPIF . . . . . . .  B  ADDR  00F8H.7   A   
SPI0CN0_TXNF . . . . . . .  B  ADDR  00F8H.1   A   
SPI0CN0_WCOL . . . . . . .  B  ADDR  00F8H.6   A   
SPI0DAT. . . . . . . . . .  D  ADDR  00A3H     A   
SPI0FCN0 . . . . . . . . .  D  ADDR  009AH     A   
SPI0FCN1 . . . . . . . . .  D  ADDR  009BH     A   
SPI0FCT. . . . . . . . . .  D  ADDR  00F7H     A   
SPI0PCF. . . . . . . . . .  D  ADDR  00DFH     A   
SWITCH . . . . . . . . . .  C  ADDR  0031H     R   SEG=MYPROG
TCON . . . . . . . . . . .  D  ADDR  0088H     A   
TCON_IE0 . . . . . . . . .  B  ADDR  0088H.1   A   
TCON_IE1 . . . . . . . . .  B  ADDR  0088H.3   A   
TCON_IT0 . . . . . . . . .  B  ADDR  0088H.0   A   
TCON_IT1 . . . . . . . . .  B  ADDR  0088H.2   A   
TCON_TF0 . . . . . . . . .  B  ADDR  0088H.5   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE    22

TCON_TF1 . . . . . . . . .  B  ADDR  0088H.7   A   
TCON_TR0 . . . . . . . . .  B  ADDR  0088H.4   A   
TCON_TR1 . . . . . . . . .  B  ADDR  0088H.6   A   
TH0. . . . . . . . . . . .  D  ADDR  008CH     A   
TH1. . . . . . . . . . . .  D  ADDR  008DH     A   
TIMER0_IRQN. . . . . . . .  N  NUMB  0001H     A   
TIMER1_IRQN. . . . . . . .  N  NUMB  0003H     A   
TIMER2_IRQN. . . . . . . .  N  NUMB  0005H     A   
TIMER3_IRQN. . . . . . . .  N  NUMB  000EH     A   
TIMER4_IRQN. . . . . . . .  N  NUMB  0011H     A   
TIMER5_IRQN. . . . . . . .  N  NUMB  0012H     A   
TL0. . . . . . . . . . . .  D  ADDR  008AH     A   
TL1. . . . . . . . . . . .  D  ADDR  008BH     A   
TMOD . . . . . . . . . . .  D  ADDR  0089H     A   
TMR2 . . . . . . . . . . .  D  ADDR  00CEH     A   
TMR2CN0. . . . . . . . . .  D  ADDR  00C8H     A   
TMR2CN0_T2SPLIT. . . . . .  B  ADDR  00C8H.3   A   
TMR2CN0_T2XCLK0. . . . . .  B  ADDR  00C8H.0   A   
TMR2CN0_T2XCLK1. . . . . .  B  ADDR  00C8H.1   A   
TMR2CN0_TF2CEN . . . . . .  B  ADDR  00C8H.4   A   
TMR2CN0_TF2H . . . . . . .  B  ADDR  00C8H.7   A   
TMR2CN0_TF2L . . . . . . .  B  ADDR  00C8H.6   A   
TMR2CN0_TF2LEN . . . . . .  B  ADDR  00C8H.5   A   
TMR2CN0_TR2. . . . . . . .  B  ADDR  00C8H.2   A   
TMR2CN1. . . . . . . . . .  D  ADDR  00FDH     A   
TMR2H. . . . . . . . . . .  D  ADDR  00CFH     A   
TMR2L. . . . . . . . . . .  D  ADDR  00CEH     A   
TMR2RL . . . . . . . . . .  D  ADDR  00CAH     A   
TMR2RLH. . . . . . . . . .  D  ADDR  00CBH     A   
TMR2RLL. . . . . . . . . .  D  ADDR  00CAH     A   
TMR3 . . . . . . . . . . .  D  ADDR  0094H     A   
TMR3CN0. . . . . . . . . .  D  ADDR  0091H     A   
TMR3CN1. . . . . . . . . .  D  ADDR  00FEH     A   
TMR3H. . . . . . . . . . .  D  ADDR  0095H     A   
TMR3L. . . . . . . . . . .  D  ADDR  0094H     A   
TMR3RL . . . . . . . . . .  D  ADDR  0092H     A   
TMR3RLH. . . . . . . . . .  D  ADDR  0093H     A   
TMR3RLL. . . . . . . . . .  D  ADDR  0092H     A   
TMR4 . . . . . . . . . . .  D  ADDR  00A4H     A   
TMR4CN0. . . . . . . . . .  D  ADDR  0098H     A   
TMR4CN0_T4SPLIT. . . . . .  B  ADDR  0098H.3   A   
TMR4CN0_T4XCLK0. . . . . .  B  ADDR  0098H.0   A   
TMR4CN0_T4XCLK1. . . . . .  B  ADDR  0098H.1   A   
TMR4CN0_TF4CEN . . . . . .  B  ADDR  0098H.4   A   
TMR4CN0_TF4H . . . . . . .  B  ADDR  0098H.7   A   
TMR4CN0_TF4L . . . . . . .  B  ADDR  0098H.6   A   
TMR4CN0_TF4LEN . . . . . .  B  ADDR  0098H.5   A   
TMR4CN0_TR4. . . . . . . .  B  ADDR  0098H.2   A   
TMR4CN1. . . . . . . . . .  D  ADDR  00FFH     A   
TMR4H. . . . . . . . . . .  D  ADDR  00A5H     A   
TMR4L. . . . . . . . . . .  D  ADDR  00A4H     A   
TMR4RL . . . . . . . . . .  D  ADDR  00A2H     A   
TMR4RLH. . . . . . . . . .  D  ADDR  00A3H     A   
TMR4RLL. . . . . . . . . .  D  ADDR  00A2H     A   
TMR5 . . . . . . . . . . .  D  ADDR  00D4H     A   
TMR5CN0. . . . . . . . . .  D  ADDR  00C0H     A   
TMR5CN0_T5SPLIT. . . . . .  B  ADDR  00C0H.3   A   
TMR5CN0_T5XCLK0. . . . . .  B  ADDR  00C0H.0   A   
TMR5CN0_T5XCLK1. . . . . .  B  ADDR  00C0H.1   A   
TMR5CN0_TF5CEN . . . . . .  B  ADDR  00C0H.4   A   
TMR5CN0_TF5H . . . . . . .  B  ADDR  00C0H.7   A   
TMR5CN0_TF5L . . . . . . .  B  ADDR  00C0H.6   A   
TMR5CN0_TF5LEN . . . . . .  B  ADDR  00C0H.5   A   
AX51 MACRO ASSEMBLER  MAIN                                                                  11/27/22 19:10:49 PAGE    23

TMR5CN0_TR5. . . . . . . .  B  ADDR  00C0H.2   A   
TMR5CN1. . . . . . . . . .  D  ADDR  00F1H     A   
TMR5H. . . . . . . . . . .  D  ADDR  00D5H     A   
TMR5L. . . . . . . . . . .  D  ADDR  00D4H     A   
TMR5RL . . . . . . . . . .  D  ADDR  00D2H     A   
TMR5RLH. . . . . . . . . .  D  ADDR  00D3H     A   
TMR5RLL. . . . . . . . . .  D  ADDR  00D2H     A   
UART0_IRQN . . . . . . . .  N  NUMB  0004H     A   
UART0PCF . . . . . . . . .  D  ADDR  00D9H     A   
UART1_IRQN . . . . . . . .  N  NUMB  000FH     A   
UART1FCN0. . . . . . . . .  D  ADDR  009DH     A   
UART1FCN1. . . . . . . . .  D  ADDR  00D8H     A   
UART1FCN1_RFRQ . . . . . .  B  ADDR  00D8H.3   A   
UART1FCN1_RIE. . . . . . .  B  ADDR  00D8H.0   A   
UART1FCN1_RXTO0. . . . . .  B  ADDR  00D8H.1   A   
UART1FCN1_RXTO1. . . . . .  B  ADDR  00D8H.2   A   
UART1FCN1_TFRQ . . . . . .  B  ADDR  00D8H.7   A   
UART1FCN1_TIE. . . . . . .  B  ADDR  00D8H.4   A   
UART1FCN1_TXHOLD . . . . .  B  ADDR  00D8H.5   A   
UART1FCN1_TXNF . . . . . .  B  ADDR  00D8H.6   A   
UART1FCT . . . . . . . . .  D  ADDR  00FAH     A   
UART1LIN . . . . . . . . .  D  ADDR  009EH     A   
UART1PCF . . . . . . . . .  D  ADDR  00DAH     A   
VDM0CN . . . . . . . . . .  D  ADDR  00FFH     A   
WDTCN. . . . . . . . . . .  D  ADDR  0097H     A   
XBR0 . . . . . . . . . . .  D  ADDR  00E1H     A   
XBR1 . . . . . . . . . . .  D  ADDR  00E2H     A   
XBR2 . . . . . . . . . . .  D  ADDR  00E3H     A   
XOSC0CN. . . . . . . . . .  D  ADDR  0086H     A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
